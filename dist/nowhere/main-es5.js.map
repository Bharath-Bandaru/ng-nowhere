{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/audio-card-modal/audio-card-modal.component.ts","webpack:///src/app/audio-card-modal/audio-card-modal.component.html","webpack:///src/app/audio-card/audio-card.component.ts","webpack:///src/app/audio-card/audio-card.component.html","webpack:///src/app/audio-float-info/audio-float-info.component.ts","webpack:///src/app/audio-float-info/audio-float-info.component.html","webpack:///src/app/card-audio/card-audio.component.ts","webpack:///src/app/card-audio/card-audio.component.html","webpack:///src/app/card-small-wave/card-small-wave.component.ts","webpack:///src/app/card-small-wave/card-small-wave.component.html","webpack:///src/app/card/card.component.ts","webpack:///src/app/card/card.component.html","webpack:///src/app/cards-grid/cards-grid.component.ts","webpack:///src/app/cards-grid/cards-grid.component.html","webpack:///src/app/confess/confess.component.ts","webpack:///src/app/confess/confess.component.html","webpack:///src/app/custom-wave/constants/polling-time.ts","webpack:///src/app/custom-wave/decorators/audio-param.ts","webpack:///src/app/custom-wave/directives/audio-context.ts","webpack:///src/app/custom-wave/directives/channel.ts","webpack:///src/app/custom-wave/directives/destination.ts","webpack:///src/app/custom-wave/directives/listener.ts","webpack:///src/app/custom-wave/directives/offline-audio-context.ts","webpack:///src/app/custom-wave/directives/output.ts","webpack:///src/app/custom-wave/directives/stream-destination.ts","webpack:///src/app/custom-wave/module.ts","webpack:///src/app/custom-wave/nodes/analyser.ts","webpack:///src/app/custom-wave/nodes/biquad-filter.ts","webpack:///src/app/custom-wave/nodes/channel-merger.ts","webpack:///src/app/custom-wave/nodes/channel-splitter.ts","webpack:///src/app/custom-wave/nodes/convolver.ts","webpack:///src/app/custom-wave/nodes/delay.ts","webpack:///src/app/custom-wave/nodes/dynamics-compressor.ts","webpack:///src/app/custom-wave/nodes/gain.ts","webpack:///src/app/custom-wave/nodes/iir-filter.ts","webpack:///src/app/custom-wave/nodes/panner.ts","webpack:///src/app/custom-wave/nodes/script-processor.ts","webpack:///src/app/custom-wave/nodes/stereo-panner.ts","webpack:///src/app/custom-wave/nodes/wave-shaper.ts","webpack:///src/app/custom-wave/nodes/worklet.ts","webpack:///src/app/custom-wave/pipes/audio-param.pipe.ts","webpack:///src/app/custom-wave/pipes/periodic-wave.pipe.ts","webpack:///src/app/custom-wave/services/audio-buffer.service.ts","webpack:///src/app/custom-wave/sources/buffer-source.ts","webpack:///src/app/custom-wave/sources/constant-source.ts","webpack:///src/app/custom-wave/sources/media-source.ts","webpack:///src/app/custom-wave/sources/media-stream-source.ts","webpack:///src/app/custom-wave/sources/media-stream-track-source.ts","webpack:///src/app/custom-wave/tokens/audio-context.ts","webpack:///src/app/custom-wave/tokens/audio-node.ts","webpack:///src/app/custom-wave/tokens/constructor-support.ts","webpack:///src/app/custom-wave/tokens/feedback-coefficients.ts","webpack:///src/app/custom-wave/tokens/feedforward-coefficients.ts","webpack:///src/app/custom-wave/tokens/media-stream-track.ts","webpack:///src/app/custom-wave/tokens/media-stream.ts","webpack:///src/app/custom-wave/utils/connect.ts","webpack:///src/app/custom-wave/utils/fallback-audio-param.ts","webpack:///src/app/custom-wave/utils/latency-hint-factory.ts","webpack:///src/app/custom-wave/utils/parse.ts","webpack:///src/app/custom-wave/utils/process-audio-param.ts","webpack:///src/app/hear/hear.component.ts","webpack:///src/app/hear/hear.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/material.module.ts","webpack:///src/app/nativeJS/string-methods.ts","webpack:///src/app/nav-bar/nav-bar.component.ts","webpack:///src/app/nav-bar/nav-bar.component.html","webpack:///src/app/pipes/obscenity.pipe.ts","webpack:///src/app/pipes/pipes.module.ts","webpack:///src/app/shared/communication.service.ts","webpack:///src/app/theming.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","overlayContainer","themingService","elementRef","title","isSafari","data","card","unique_id","show","type","userId","desc","theme","value","nativeElement","ownerDocument","body","style","backgroundColor","themingSubscription","unsubscribe","subscribe","cssClass","applyThemeOnOverlays","getBrowserName","agent","window","navigator","userAgent","toLowerCase","indexOf","opr","chrome","selector","templateUrl","styleUrls","AppModule","provide","useClass","useValue","appearance","hasBackdrop","withServerTransition","appId","declarations","providers","bootstrap","AudioCardModalComponent","cdr","dialogRef","config","wave","loading","loaded","url","musicButton","duration","updatePosition","top","afterClosed","result","onStopPressed","getDuration","detectChanges","create","container","waveColor","hideScrollbar","height","progressColor","on","disableClose","play","button","textContent","trim","onPlayPressed","playPause","onPausePressed","generateWaveform","load","stop","pause","secs","Math","floor","slice","close","onClickDismiss","AudioCardComponent","messageService","minimise","played","closed","chevron","expandMore","init","updateTheme","subscription","getMessage","message","showFloatAudioPlayer","destroyPlayer","console","log","initialisePlayer","destroy","onClickClosed","responsive","AudioFloatInfoComponent","sendMessage","CardAudioComponent","context","cdRef","communicationService","dialog","showAudioCard","buffers","Date","now","selectedChain","selectedSource","gain","pan","delayTime","delayGain","distortion","frequency","detune","filterGain","Q","curve","makeDistortionCurve","started","real","pulseWidth","stopped","source","start","innerWidth","resume","discImage","array","canvas","canvasCtx","getContext","clearRect","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","sliceWidth","length","x","i","v","y","moveTo","lineTo","stroke","emit","openDailog","open","width","changeDetection","OnPush","AudioContext","masonry","amount","samples","Float32Array","deg","PI","abs","CardSmallWaveComponent","CardComponent","readMore","obscenity","reloadCards","position","obscenetiy","card1","card2","input","CardsGridComponent","count","cards","myOptions","gutter","fitWidth","interval","setTimeout","layout","clearTimeout","filter","c","forEach","ConfessComponent","POLLING_TIME","audioParam","param","decorator","target","propertyKey","Object","defineProperty","set","Number","parseFloat","AudioWorkletNode","parameters","get","AudioParam","currentTime","WebAudioContext","latencyHint","sampleRate","parseInt","undefined","useExisting","WebAudioChannel","modern","createGain","setPrototypeOf","prototype","disconnect","GainNode","exportAs","BaseAudioContext","WebAudioDestination","node","createAnalyser","reduce","acc","cur","that","fftSize","connect","destination","quiet","pipe","getFloatTimeDomainData","isSilent","AnalyserNode","AudioNode","WebAudioListener","listener","positionX","setOrientation","forwardXParam","forwardYParam","forwardZParam","upXParam","upYParam","upZParam","setPosition","positionXParam","positionYParam","positionZParam","forwardX","forwardY","forwardZ","positionY","positionZ","upX","upY","upZ","WebAudioOfflineContext","numberOfChannels","autoplay","complete","oncomplete","renderedBuffer","startRendering","OfflineAudioContext","WebAudioOutput","waOutput","WebAudioMediaStreamDestination","createMediaStreamDestination","MediaStreamAudioDestinationNode","CustWebAudioModule","WebAudioAnalyser","fftSizeArg","maxDecibelsArg","minDecibelsArg","smoothingTimeConstantArg","maxDecibels","minDecibels","smoothingTimeConstant","frequencyByte$","Uint8Array","frequencyBinCount","getByteFrequencyData","frequencyFloat$","getFloatFrequencyData","timeByte$","getByteTimeDomainData","timeFloat$","inputs","WebAudioBiquadFilter","detuneArg","frequencyArg","gainArg","QArg","createBiquadFilter","BiquadFilterNode","detuneParam","frequencyParam","gainParam","qParam","WebAudioChannelMerger","numberOfInputs","createChannelMerger","channels","index","ChannelMergerNode","descendants","WebAudioChannelSplitter","outputs","numberOfOutputs","createChannelSplitter","ChannelSplitterNode","WebAudioConvolver","audioBufferService","createConvolver","buffer$","next","fetch","buffer","ConvolverNode","bufferSetter","WebAudioDelay","delayTimeArg","maxDelayTimeArg","maxDelayTime","createDelay","DelayNode","delayTimeParam","WebAudioDynamicsCompressor","attackArg","kneeArg","ratioArg","releaseArg","thresholdArg","attack","knee","ratio","release","threshold","createDynamicsCompressor","DynamicsCompressorNode","attackParam","kneeParam","ratioParam","releaseParam","thresholdParam","WebAudioGain","WebAudioIIRFilter","feedback","feedforward","createIIRFilter","IIRFilterNode","WebAudioPanner","createPanner","orientationXParam","orientationYParam","orientationZParam","PannerNode","WebAudioScriptProcessor","bufferSize","numberOfInputChannels","numberOfOutputChannels","createScriptProcessor","audioprocess","onaudioprocess","_","ScriptProcessorNode","WebAudioStereoPanner","panArg","_test","StereoPannerNode","fallbackToPannerNode","xDeg","zDeg","sin","z","panParam","WebAudioWaveShaper","createWaveShaper","WaveShaperNode","WebAudioWorklet","name","processorerror","onprocessorerror","WebAudioParamPipe","mode","Array","WebAudioPeriodicWavePipe","imag","disableNormalization","createPeriodicWave","AudioBufferService","cache","Map","reject","has","request","XMLHttpRequest","responseType","onerror","onabort","onload","decodeAudioData","response","send","providedIn","WebAudioBufferSource","playbackRateArg","playbackRate","createBufferSource","_node","ended","onended","AudioBufferSourceNode","playbackRateParam","WebAudioConstantSource","offset","ConstantSourceNode","offsetParam","WebAudioMediaSource","mediaElement","createMediaElementSource","MediaElementAudioSourceNode","WebAudioMediaStreamSource","mediaStream","createMediaStreamSource","MediaStreamAudioSourceNode","MediaStream","WebAudioMediaStreamTrackSource","mediaStreamTrack","MediaStreamTrackAudioSourceNode","MediaStreamTrack","AUDIO_CONTEXT","factory","AUDIO_NODE","CONSTRUCTOR_SUPPORT","FEEDBACK_COEFFICIENTS","FEEDFORWARD_COEFFICIENTS","MEDIA_STREAM_TRACK","MEDIA_STREAM","fallbackAudioParam","last","latencyHintFactory","parse","fallback","parsed","isNaN","processAudioParam","cancelAndHoldAtTime","cancelScheduledValues","setValueAtTime","guard","processSchedule","setValueCurveAtTime","processAutomation","automation","linearRampToValueAtTime","exponentialRampToValueAtTime","HearComponent","HomeComponent","MaterialModule","matIconRegistry","String","replaceAll","str1","str2","ignore","replace","RegExp","NavBarComponent","hearUrl","hearSelectedUrl","logoUrl","navLogoUrl","confessUrl","confessDarkUrl","confessSelectedUrl","selection","expandIcon","isDarkMode","showMenu","userLinks","iconCls","click","$event","changeTheme","checked","changeObscenetiy","hearOnClick","confessOnClick","onClickUserOption","ObscenityPipe","obscenities","newVal","grawlix","curse","PipesModule","CommunicationService","subject","obscene","asObservable","ThemingService","ref","themes","darkModeOn","matchMedia","matches","addListener","turnOn","tick","overlayContainerClasses","getContainerElement","classList","themeClassesToRemove","from","remove","add","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component'\nimport { ConfessComponent } from './confess/confess.component'\nimport { HearComponent } from './hear/hear.component'\nconst routes: Routes = [\n  {path: 'hear', component: HearComponent},\n  {path: 'confess', component: ConfessComponent},\n  {path:'',component: HearComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { \n\n\n}\n","import { OverlayContainer } from '@angular/cdk/overlay';\nimport { AfterViewChecked, AfterViewInit, Component, ElementRef, HostBinding, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ThemingService } from './theming.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit, OnDestroy, AfterViewChecked {\n  title = 'nowhere';\n  themingSubscription: Subscription;\n  isSafari = false;\n  @HostBinding('class') public cssClass: string;\n  data = {\n    card: {\n      unique_id: \"1\", show: false, type: \"audio\", userId: \"@monkey504564\", title: \"Billie Eilish Contemplates Distraction, and 10 More New Songs. Listen one now!and don't judge me for my actions.\",\n      desc: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed doeiusmod tempor incididunt ut labore etc.Ut enim ad minim veniam, quis nostrudexercitation ullamco laboris nisi ut aliquipex ea commodo consequat.\"\n    }\n  };\n  constructor(private overlayContainer: OverlayContainer,\n    private themingService: ThemingService,\n    private elementRef: ElementRef,\n  ) {\n  }\n\n  ngAfterViewChecked(): void {\n    if (this.themingService.theme.value !== 'light-theme') {\n      this.elementRef.nativeElement.ownerDocument.body.style.backgroundColor = \"#0B0B0B\";\n    } else {\n      this.elementRef.nativeElement.ownerDocument.body.style.backgroundColor = \"#D6CCC1\";\n    }\n  }\n  ngOnDestroy() {\n    this.themingSubscription.unsubscribe();\n  }\n  ngOnInit() {\n    this.themingSubscription = this.themingService.theme.subscribe((theme: string) => {\n      this.cssClass = theme;\n      this.themingService.applyThemeOnOverlays(this.overlayContainer, this.themingService, this.cssClass);\n    });\n    if (this.getBrowserName() === 'safari') {\n      this.isSafari = true;\n    }\n  }\n  public getBrowserName() {\n    const agent = window.navigator.userAgent.toLowerCase()\n    switch (true) {\n      case agent.indexOf('edge') > -1:\n        return 'edge';\n      case agent.indexOf('opr') > -1 && !!(<any>window).opr:\n        return 'opera';\n      case agent.indexOf('chrome') > -1 && !!(<any>window).chrome:\n        return 'chrome';\n      case agent.indexOf('trident') > -1:\n        return 'ie';\n      case agent.indexOf('firefox') > -1:\n        return 'firefox';\n      case agent.indexOf('safari') > -1:\n        return 'safari';\n      default:\n        return 'other';\n    }\n  }\n}\n","<body>\n<app-nav-bar></app-nav-bar>\n\n<div class=\"content\">\n  <router-outlet></router-outlet>\n  <app-audio-float-info *ngIf= \"!isSafari\" [data]=\"data\"></app-audio-float-info>\n  <app-audio-card *ngIf= \"isSafari\" [data]=\"data\"></app-audio-card>\n</div>\n</body>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\nimport { MaterialModule } from './material.module';\nimport { ConfessComponent } from './confess/confess.component';\nimport { HearComponent } from './hear/hear.component';\nimport { CardComponent } from './card/card.component';\nimport { CardsGridComponent } from './cards-grid/cards-grid.component'\nimport { NgxMasonryModule } from 'ngx-masonry';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ThemingService } from './theming.service';\nimport { FormsModule } from '@angular/forms';\nimport { LocationStrategy, PathLocationStrategy } from '@angular/common';\nimport { CardAudioComponent } from './card-audio/card-audio.component';\nimport { CardSmallWaveComponent } from './card-small-wave/card-small-wave.component';\nimport { AudioCardModalComponent } from './audio-card-modal/audio-card-modal.component';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\nimport { MAT_DIALOG_DEFAULT_OPTIONS } from '@angular/material/dialog';\nimport { AudioCardComponent } from './audio-card/audio-card.component';\nimport { CommunicationService } from './shared/communication.service';\nimport { AudioFloatInfoComponent } from './audio-float-info/audio-float-info.component';\nimport { CustWebAudioModule } from './custom-wave/module'\nimport { PipesModule } from './pipes/pipes.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    NavBarComponent,\n    ConfessComponent,\n    HearComponent,\n    CardComponent,\n    CardsGridComponent,\n    CardAudioComponent,\n    CardSmallWaveComponent,\n    AudioCardModalComponent,\n    AudioCardComponent,\n    AudioFloatInfoComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MaterialModule,\n    NgxMasonryModule,\n    CustWebAudioModule,\n    FormsModule,\n    PipesModule,\n    BrowserAnimationsModule,\n    BrowserModule.withServerTransition({appId: 'nowhere'}),\n  ],\n  providers: [{\n    provide: LocationStrategy,\n    useClass: PathLocationStrategy,\n    },{provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'fill' } },\n    {provide: MAT_DIALOG_DEFAULT_OPTIONS, useValue: {hasBackdrop: true}},\n    ThemingService,\n    CommunicationService,\n],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { AfterViewChecked, ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA, MAT_DIALOG_DEFAULT_OPTIONS } from '@angular/material/dialog';\nimport WaveSurfer from 'wavesurfer.js';\n@Component({\n  selector: 'app-audio-card-modal',\n  templateUrl: './audio-card-modal.component.html',\n  styleUrls: ['./audio-card-modal.component.scss']\n})\nexport class AudioCardModalComponent implements OnInit,AfterViewChecked {\n  wave: WaveSurfer = null;\n  loading = true;\n  loaded = false;\n  url = \"assets/mp3/sample.mp3\";\n  musicButton = \"not_started\";\n  duration = \"1:00\";\n  constructor(private cdr: ChangeDetectorRef, public dialogRef: MatDialogRef<AudioCardModalComponent>,\n  @Inject(MAT_DIALOG_DATA) public data: any,@Inject(MAT_DIALOG_DEFAULT_OPTIONS) public config: any) { }\n\n  card: any;\n\n  ngOnInit(): void {\n    this.card = this.data.card;\n    this.loading = false;\n    this.dialogRef.updatePosition({top: '100px'})\n    this.dialogRef.afterClosed().subscribe(result =>{\n      if(this.wave)\n       this.onStopPressed();\n    });\n  }\n\n  ngAfterViewChecked(){\n    if(this.wave){\n      this.getDuration();\n      this.cdr.detectChanges();\n    }\n}\ngenerateWaveform(): void {\n  this.loading = true;\n  Promise.resolve(null).then(() => {\n    this.wave = WaveSurfer.create({\n      container: '#waveform',\n      waveColor: '#f47037',\n      hideScrollbar: true,\n      height:52,\n      progressColor: 'gray',\n    });\n    this.wave.hideScrollbar = true;\n    this.wave.on('ready', () => {\n      this.dialogRef.disableClose = true;\n      this.loading = false;\n      this.loaded = true;\n      this.wave.play();\n      this.getDuration();\n      this.cdr.detectChanges();\n    });\n  });\n}\nonPlayStopPressed(button: HTMLButtonElement){\n  if (button.textContent!.trim() === 'not_started' && !this.loading) {\n    this.musicButton = \"pause_circle_filled\";\n    button.textContent = 'pause_circle_filled';\n    this.onPlayPressed();\n  }else if(button.textContent!.trim() === 'play_circle_filled'){\n    button.textContent = 'pause_circle_filled';\n    this.wave.playPause();\n  }else{\n    button.textContent = 'play_circle_filled'\n    this.onPausePressed();\n  }\n\n}\nonPlayPressed(){\n  if (!this.wave) {\n    this.generateWaveform();\n  }\n  this.cdr.detectChanges();\n  Promise.resolve().then(() => this.wave.load(this.url));\n}\nonStopPressed(): void {\n  this.wave.stop();\n}\nonPausePressed(){\n  this.wave.pause();\n}\n\ngetDuration(){\n  let secs = this.wave.getDuration();\n  this.duration = Math.floor(secs/60) + \" : \" + (\"0\" + Math.floor(secs - 60*Math.floor(secs/60))).slice(-2);\n}\nonClickDismiss(){\n  this.dialogRef.close();\n}\n}\n","<div>\n\t<div>\n\t\t<mat-icon class=\"theme-text-color-prim right pointer\" (click)=\"onClickDismiss()\">highlight_off</mat-icon>\n\t</div>\n\t<div cdkDrag cdkDragRootElement=\".cdk-overlay-pane\" class=\"grab\" cdkDragHandle>\n\t\t<p class=\"font-36 font-merri fw-600 theme-text-color-prim\" style=\"line-height: 1.2;\">{{card.title}}</p>\n\t</div>\n\n\t<div>\n\t\t<mat-chip-list aria-label=\"Fish selection\">\n\t\t\t<mat-chip [selectable]=false>\n\t\t\t\t<p class=\"mb0\">Netflix TV Series</p>\n\t\t\t</mat-chip>\n\t\t\t<mat-chip [selectable]=false>\n\t\t\t\t<p class=\"mb0\">Drama</p>\n\t\t\t</mat-chip>\n\t\t\t<mat-chip [selectable]=false>\n\t\t\t\t<p class=\"mb0\">popcorn</p>\n\t\t\t</mat-chip>\n\t\t\t<mat-chip [selectable]=false>\n\t\t\t\t<p class=\"mb0\">university</p>\n\t\t\t</mat-chip>\n\t\t</mat-chip-list>\n\t</div>\n\n\t<div style=\"padding-top: 20px;\">\n\t\t<div style=\"width: 100%\">\n\t\t\t<div id=\"waveform\" class=\"pointer\" style=\"padding-bottom: 10px;\"></div>\n\t\t\t<div *ngIf=\"!loading\" class=\"d-flex justify-content-between\">\n\t\t\t\t<mat-icon class=\"font-36 pointer color-orange\" (click)=\"onPlayStopPressed($event.target)\">\n\t\t\t\t\t{{musicButton}}</mat-icon>\n\t\t\t\t<!-- <p *ngIf = \"wave\" class=\"mb0 pr1 pt2 font-12 fw-600 theme-text-color-prim\">\n\t\t\t\t{{duration}}\n\t\t\t</p> -->\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n\t<div *ngIf=\"loading\">\n\t\t<mat-progress-bar mode=\"buffer\"></mat-progress-bar>\n\t</div>\n</div>","import { AfterViewChecked, AfterViewInit, ChangeDetectorRef, Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport WaveSurfer from 'wavesurfer.js';\nimport { CommunicationService } from '../shared/communication.service';\nimport { ThemingService } from '../theming.service';\n\n@Component({\n  selector: 'app-audio-card',\n  templateUrl: './audio-card.component.html',\n  styleUrls: ['./audio-card.component.scss'],\n})\nexport class AudioCardComponent implements OnInit, OnDestroy {\n  subscription: Subscription;\n  wave: WaveSurfer = null;\n  loading = true;\n  @Input() data;\n  minimise = true;\n  played = false;\n  closed = false;\n  chevron = \"chevron_left\"\n  url = \"assets/mp3/sample.mp3\";\n  musicButton = \"not_started\";\n  duration = \"1:00\";\n  expandMore = \"expand_less\"\n  progressColor = \"#7e7e7e\";\n  waveColor = \"#d6ccc1\";\n  constructor(private cdr: ChangeDetectorRef, private messageService: CommunicationService,private themingService: ThemingService) { \n    this.updateTheme(); \n    this.subscription =  this.messageService.getMessage().subscribe(message => {\n      if (message.showFloatAudioPlayer === true) {\n        if(this.played){\n          this.destroyPlayer();\n        }\n        this.played = true;\n        console.log(message);\n        this.initialisePlayer();\n      } else if(message.showFloatAudioPlayer === false){\n        this.destroyPlayer();\n      }\n    });\n  }\n  updateTheme(){\n    if(this.themingService.theme.value === 'light-theme'){\n      this.progressColor = \"#d6ccc1\";\n      this.waveColor = \"#706d69\";\n    }else{\n        this.progressColor = \"#0b0b0b\";\n        this.waveColor = \"#929395\";\n    }\n  }\n  destroyPlayer(){\n    if(this.wave){\n      this.wave.stop();\n      this.wave.destroy();\n    }\n    this.onClickClosed();\n    this.played =false;\n  }\n  card: any;\n  init = true;\n  ngOnInit(): void {\n    this.minimise = true;\n  }\n  ngOnDestroy(){\n    this.subscription.unsubscribe();\n  }\n  initialisePlayer(){\n    this.updateTheme(); \n    this.wave = null;\n    this.minimise = true;\n    this.loading = true;\n    this.closed = false;\n    this.chevron = \"chevron_left\"\n    this.url = \"assets/mp3/sample.mp3\";\n    this.musicButton = \"not_started\";\n    this.duration = \"1:00\";\n    this.expandMore = \"expand_less\"\n    this.card = this.data.card;\n    this.loading = false;\n    if (!this.wave) {\n      this.generateWaveform();\n    }\n    this.cdr.detectChanges();\n    Promise.resolve().then(() => this.wave.load(this.url));\n  }\n\ngenerateWaveform(): void {\n  this.loading = true;\n  Promise.resolve(null).then(() => {\n    this.wave = WaveSurfer.create({\n      container: '#waveform',\n      waveColor: this.waveColor,\n      hideScrollbar: true,\n      height:36,\n      responsive:true,\n      progressColor: this.progressColor,\n    });\n    this.wave.hideScrollbar = true;\n    this.wave.on('ready', () => {\n      this.loading = false;\n      this.getDuration();\n      this.wave.play();\n      this.musicButton = \"pause_circle_filled\";\n      this.cdr.detectChanges();\n    });\n  });\n}\nonPlayStopPressed(button: HTMLButtonElement){\n  if (button.textContent!.trim() === 'not_started' && !this.loading) {\n    this.musicButton = \"pause_circle_filled\";\n    button.textContent = 'pause_circle_filled';\n    this.onPlayPressed();\n  }else if(button.textContent!.trim() === 'play_circle_filled'){\n    button.textContent = 'pause_circle_filled';\n    this.wave.playPause();\n  }else{\n    button.textContent = 'play_circle_filled'\n    this.onPausePressed();\n  }\n\n}\nonPlayPressed(){\n  this.wave.play();\n}\nonStopPressed(): void {\n  this.wave.stop();\n}\nonPausePressed(){\n  this.wave.pause();\n}\ngetDuration(){\n  let secs = this.wave.getDuration();\n  this.duration = Math.floor(secs/60) + \" : \" + (\"0\" + Math.floor(secs - 60*Math.floor(secs/60))).slice(-2);\n}\nonClickDismiss(){\n}\nonClickMinimise(){\n  this.minimise = !this.minimise;\n  this.expandMore = this.minimise? \"expand_less\":\"expand_more\";\n}\nonClickClosed(){\n  this.minimise = true;\n  this.expandMore = this.minimise? \"expand_less\":\"expand_more\";\n  this.closed = !this.closed;\n  this.chevron = this.closed? \"chevron_right\": \"chevron_left\";\n}\n}\n","<div *ngIf=\"played\" class=\"fixed\">\n    <!-- cdkDrag cdkDragRootElement=\".fixed\" cdkDragHandle> -->\n    <div *ngIf=\"false\" style=\"display: inline-block;\">\n        <mat-icon class=\"theme-text-color-prim right pointer mb-6 mr-1 chevron\" (click)=\"onClickClosed()\">cancel\n        </mat-icon>\n    </div>\n    <div class=\"card-bg\" style=\"display: inline-block;\" [ngClass]=\"{'w-310': !closed,'w-54': closed}\">\n        <div>\n            <div [ngClass]=\"{'p-13': !minimise}\">\n                <div *ngIf=\"!minimise && !closed\">\n                    <p class=\"font-24 font-merri fw-600 color-accent grab\" style=\"line-height: 1.2;\">{{card.title}}</p>\n                </div>\n                <div *ngIf=\"!minimise && !closed\" class=\"mb2\">\n                    <mat-chip-list aria-label=\"Fish selection\">\n                        <mat-chip [selectable]=false>\n                            <p class=\"mb0\">Netflix TV Series</p>\n                        </mat-chip>\n                        <mat-chip [selectable]=false>\n                            <p class=\"mb0\">Drama</p>\n                        </mat-chip>\n                        <mat-chip [selectable]=false>\n                            <p class=\"mb0\">popcorn</p>\n                        </mat-chip>\n                        <mat-chip [selectable]=false>\n                            <p class=\"mb0\">university</p>\n                        </mat-chip>\n                    </mat-chip-list>\n                </div>\n            </div>\n            <div>\n                <div *ngIf=\"!closed\" [ngClass]=\"{'visible': !loading,'invisible': loading}\"\n                    style=\"display: inline-block; padding-bottom: 7px; padding-left: 2px;\">\n                    <mat-icon class=\"color-accent right pointer\" (click)=\"onClickMinimise()\">{{expandMore}}</mat-icon>\n                </div>\n                <div *ngIf=\"!closed\" id=\"waveform\" class=\"pointer\" style=\"display: inline-block; width: 228px;\"></div>\n                <mat-icon *ngIf=\"!loading\" class=\"font-36 pointer color-accent-play\" style=\"display: inline-block\"\n                    (click)=\"onPlayStopPressed($event.target)\">{{musicButton}}</mat-icon>\n                <!-- <p *ngIf = \"wave\" class=\"mb0 pr1 pt2 font-12 fw-600 theme-text-color-prim\">\n                    {{duration}}\n                </p> -->\n            </div>\n            <div *ngIf=\"loading\">\n                <mat-progress-bar mode=\"buffer\" class=\"buffer-position-1\"></mat-progress-bar>\n            </div>\n        </div>\n    </div>\n</div>","import { ChangeDetectorRef, Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { CommunicationService } from '../shared/communication.service';\n\n@Component({\n  selector: 'app-audio-float-info',\n  templateUrl: './audio-float-info.component.html',\n  styleUrls: ['./audio-float-info.component.scss']\n})\nexport class AudioFloatInfoComponent implements OnInit, OnDestroy {\n  subscription: Subscription;\n  loading = true;\n  @Input() data;\n  minimise = true;\n  closed = false;\n  chevron = \"chevron_right\"\n  url = \"assets/mp3/sample.mp3\";\n  musicButton = \"not_started\";\n  duration = \"1:00\";\n  expandMore = \"expand_less\"\n  played = false;\n  card: any;\n  init = true;\n\n  constructor(private cdr: ChangeDetectorRef, private messageService: CommunicationService) { \n     \n    this.subscription =  this.messageService.getMessage().subscribe(message => {\n      if(message.loaded == true){\n        this.loading = false;\n      }\n      if (message.showFloatAudioPlayer === true) {\n        this.played = true;\n        this.initialisePlayer();\n        console.log(message);\n      } else if(message.showFloatAudioPlayer === false){\n        this.onClickClosed();\n        this.played =false;\n      }\n    });\n  }\n\n  ngOnInit(): void {\n   \n  }\n  ngOnDestroy(){\n    this.subscription.unsubscribe();\n  }\n  initialisePlayer(){\n    this.loading = true;\n    this.closed = false;\n    this.chevron = \"chevron_right\"\n    this.url = \"assets/mp3/sample.mp3\";\n    this.musicButton = \"stop\";\n    this.duration = \"1:00\";\n    this.expandMore = \"expand_less\"\n    this.card = this.data.card;\n    this.loading = false;\n    this.cdr.detectChanges();\n  }\n  onPlayStopPressed(button: HTMLButtonElement){\n    if (button.textContent!.trim() === 'not_started' && !this.loading) {\n      this.musicButton = \"pause_circle_filled\";\n      button.textContent = 'pause_circle_filled';\n      this.onPlayPressed();\n    }else if(button.textContent!.trim() === 'play'){\n      this.messageService.sendMessage({play : true});\n      button.textContent = 'stop';\n    }else{\n      this.played = false;\n      button.textContent = 'play'\n      this.messageService.sendMessage({play : false});\n      this.onPausePressed();\n    }\n  }\n\n  onPlayPressed(){\n    \n  }\n  onStopPressed(): void {\n    \n  }\n  onPausePressed(){\n  }\n  getDuration(){\n  }\n\nonClickMinimise(){\n  this.minimise = !this.minimise;\n  this.expandMore = this.minimise? \"expand_less\":\"expand_more\";\n  this.cdr.detectChanges();\n}\nonClickClosed(){\n  this.expandMore = this.minimise? \"expand_less\":\"expand_more\";\n  this.closed = !this.closed;\n  this.chevron = this.closed? \"chevron_left\": \"chevron_right\";\n  this.cdr.detectChanges();\n}\n}\n","<div *ngIf=\"played\" class=\"fixed\">\n    <!-- cdkDrag cdkDragRootElement=\".fixed\" cdkDragHandle> -->\n    <div [ngClass]=\"{'mb-12': !closed,'mb0':closed}\" style=\"display: inline-block;\">\n        <mat-icon class=\"theme-text-color-prim right pointer mr-1\" (click)=\"onClickClosed()\">{{chevron}}</mat-icon>\n    </div>\n    <div class=\"card-bg\" style=\"display: inline-block;\" [ngClass]=\"{'w-310': !closed,'w-54': closed}\">\n        <div>\n            <div [ngClass]=\"{'p-13': !minimise, 'p-0': closed}\">\n                <div *ngIf=\"!minimise && !closed\">\n                    <p class=\"font-24 font-merri fw-600 color-accent grab\" style=\"line-height: 1.2;\">{{card.title}}</p>\n                </div>\n                <div *ngIf=\"!minimise && !closed\" class=\"mb2\">\n                    <mat-chip-list aria-label=\"Fish selection\">\n                        <mat-chip [selectable]=false>\n                            <p class=\"mb0\">Netflix TV Series</p>\n                        </mat-chip>\n                        <mat-chip [selectable]=false>\n                            <p class=\"mb0\">Drama</p>\n                        </mat-chip>\n                        <mat-chip [selectable]=false>\n                            <p class=\"mb0\">popcorn</p>\n                        </mat-chip>\n                        <mat-chip [selectable]=false>\n                            <p class=\"mb0\">university</p>\n                        </mat-chip>\n                    </mat-chip-list>\n                </div>\n            </div>\n            <div class=\"d-flex justify-content-between\">\n                <div *ngIf=\"!closed\" [ngClass]=\"{'visible': !loading,'invisible': loading}\"\n                    style=\"padding-left: 4px;  margin-top: 7px;\">\n                    <mat-icon class=\"color-accent right pointer\" (click)=\"onClickMinimise()\">{{expandMore}}</mat-icon>\n                </div>\n                <div *ngIf=\"!closed\" [ngClass]=\"{'visible': minimise,'invisible': !minimise}\"\n                    class=\"pointer color-accent\" (click)=\"onClickMinimise()\" style=\"width: 228px; margin-top: 10px;\n                   margin-left: 9px;\">\n                    <p class=\"mb-2 title-elpis\">{{card.title}}</p>\n                </div>\n                <mat-icon *ngIf=\"!loading\" class=\"font-24 pointer color-accent music-padd\"\n                    (click)=\"onPlayStopPressed($event.target)\">{{musicButton}}</mat-icon>\n                <!-- <p *ngIf = \"wave\" class=\"mb0 pr1 pt2 font-12 fw-600 theme-text-color-prim\">\n                       {{duration}}\n                   </p> -->\n            </div>\n            <div *ngIf=\"loading\">\n                <mat-progress-bar mode=\"buffer\" class=\"buffer-position\"></mat-progress-bar>\n            </div>\n        </div>\n    </div>\n</div>","import { AfterViewChecked, AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Inject, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { NgxMasonryComponent } from 'ngx-masonry';\nimport { Subscription } from 'rxjs';\nimport { AudioCardModalComponent } from '../audio-card-modal/audio-card-modal.component';\nimport { AUDIO_CONTEXT } from '../custom-wave/tokens/audio-context';\nimport { CommunicationService } from '../shared/communication.service';\nimport { ThemingService } from '../theming.service';\n\n@Component({\n  selector: 'app-card-audio',\n  templateUrl: './card-audio.component.html',\n  styleUrls: ['./card-audio.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CardAudioComponent implements OnInit, AfterViewChecked, AfterViewInit, OnDestroy  {\n    subscription: Subscription;\n    @Input() card;\n    @Output() showAudioCard = new EventEmitter();\n    @ViewChild(NgxMasonryComponent) masonry: NgxMasonryComponent;\n    buffers = [Date.now()];\n    source: AudioScheduledSourceNode;\n    selectedChain = 'dry';\n    selectedSource = 'buffer';\n    gain = 1;\n    pan = 0;\n    delayTime = 1;\n    delayGain = 0.5;\n    distortion = 20;\n    frequency = 350;\n    detune = 0;\n    filterGain = 0;\n    Q = 1;\n    show = false;\n    type: BiquadFilterType = 'lowpass';\n    curve = makeDistortionCurve(this.distortion);\n    started = true;\n    readonly real = [0, 0, 1, 0, 1];\n    isSafari = false;\n    pulseWidth = 158;\n    stopped= false;\n    discImage;\n\n    constructor(@Inject(AUDIO_CONTEXT) private readonly context: AudioContext, \n    private themingService: ThemingService,\n    private cdRef:ChangeDetectorRef,\n    private communicationService: CommunicationService,\n    public dialog: MatDialog) {\n        this.subscription = communicationService.getMessage().subscribe(message=>{\n            if(this.source){\n                if(message.play === true){\n                    this.stopped = false;\n                    this.source.start();        \n                }else if(message.play === false){\n                    // if(!this.stopped)\n                        // this.source.stop(); \n                    this.show = false;\n                    this.card.show = false;\n                    this.buffers[0] = Date.now();  \n                    this.stopped = true;\n                    cdRef.detectChanges();\n                }\n            }\n        });\n     }\n\n    ngOnInit(): void {\n        if(this.getBrowserName() === 'safari'){\n            this.isSafari = true;\n        }\n        this.show = this.card.show;\n        if(window.innerWidth > 380){\n            this.pulseWidth = 169\n        }\n        this.updateTheme();\n    }\n    ngOnDestroy(){\n        this.subscription.unsubscribe();\n        //this.source.stop();\n        this.communicationService.sendMessage({showFloatAudioPlayer: false});\n    }\n    get distortionCompensation(): number {\n        return 1.2 - this.distortion / 20;\n    }\n\n\n    onCurveChange(distortion: number) {\n        this.distortion = distortion;\n        this.curve = makeDistortionCurve(distortion);\n    }\n    onClickPlayButton(button: HTMLButtonElement){\n        if (button.textContent!.trim() === 'not_started') {\n            this.communicationService.sendMessage({showFloatAudioPlayer: true});\n            this.communicationService.sendMessage({ loaded: false });\n            this.stopped = false;\n            button.textContent = \"highlight_off\";\n        }else{\n            button.textContent = \"not_started\";\n            this.stopped = true;\n            this.communicationService.sendMessage({showFloatAudioPlayer: false});\n        }\n    }\n    onClick(source: AudioScheduledSourceNode, button: HTMLButtonElement) {\n        if (button.textContent!.trim() === 'not_started') {\n            this.stopped = false;\n            button.textContent = 'highlight_off';\n            source.start();\n            this.source = source;\n            this.communicationService.sendMessage({showFloatAudioPlayer: true});\n            this.communicationService.sendMessage({ loaded: false });\n        } else {\n            source.stop();\n            this.show = false;\n            this.card.show = false;\n            this.buffers[0] = Date.now();\n            this.communicationService.sendMessage({showFloatAudioPlayer: false});\n        }\n    }\n    ngAfterViewInit() {\n        this.updateTheme();\n        this.show = this.card.show;\n        this.cdRef.detectChanges();  \n        this.context.resume(); \n    }\n    ngAfterViewChecked(): void{\n        this.show = this.card.show;\n        this.updateTheme();\n        this.cdRef.detectChanges();\n    }\n    updateTheme(){\n    if(this.themingService.theme.value === 'light-theme'){\n        this.discImage = \"assets/images/disc-light-mode.svg\";\n        this.cdRef.detectChanges();\n    }else{\n        this.discImage = \"assets/images/disc-dark-mode.svg\";\n        this.cdRef.detectChanges();\n    }\n    }\n    onTimeDomain(array: Uint8Array, canvas: HTMLCanvasElement) {\n        const canvasCtx = canvas.getContext('2d');\n        if (!canvasCtx) {\n            return;\n        }\n        canvasCtx.clearRect(0,0,this.pulseWidth,120);\n        canvasCtx.fillStyle = \"rgba(0, 0, 200, 0)\";\n        canvasCtx.fillRect(0, 0, this.pulseWidth+1, 120);\n        canvasCtx.lineWidth = 2;\n        canvasCtx.strokeStyle = 'rgb(244, 112, 54)';\n        canvasCtx.beginPath();\n        const sliceWidth = (this.pulseWidth * 1.0) / array.length;\n        let x = 0;\n        for (let i = 0; i < array.length; i++) {\n            const v = array[i] / 128.0;\n            const y = (v * 120) / 2;\n            if (i === 0) {\n                canvasCtx.moveTo(x, y);\n            } else {\n                canvasCtx.lineTo(x, y);\n            }\n            x += sliceWidth;\n        }\n        canvasCtx.lineTo(this.pulseWidth, 120 / 2);\n        canvasCtx.stroke();\n    }\n    showPlay(){\n        this.show = true;\n        this.card.show = true;\n        this.stopped = true;\n        this.showAudioCard.emit(this.card);\n    }\n    onClickAudioCard1(){\n        this.show = false;\n        this.card.show = false;\n        this.openDailog();\n      }\n      openDailog(){\n        return this.dialog.open(AudioCardModalComponent, {\n            width: '380px',\n            data: { \"card\": this.card}\n          });\n      }\n    public getBrowserName() {\n    const agent = window.navigator.userAgent.toLowerCase()\n    switch (true) {\n            case agent.indexOf('edge') > -1:\n            return 'edge';\n            case agent.indexOf('opr') > -1 && !!(<any>window).opr:\n            return 'opera';\n            case agent.indexOf('chrome') > -1 && !!(<any>window).chrome:\n            return 'chrome';\n            case agent.indexOf('trident') > -1:\n            return 'ie';\n            case agent.indexOf('firefox') > -1:\n            return 'firefox';\n            case agent.indexOf('safari') > -1:\n            return 'safari';\n            default:\n            return 'other';\n        }\n    }\n}\nfunction makeDistortionCurve(amount: number): Float32Array {\n    const samples = 44100;\n    const curve = new Float32Array(samples);\n    const deg = Math.PI / 180;\n    for (let i = 0; i < samples; ++i) {\n        const x = (i * 2) / samples - 1;\n        curve[i] = ((3 + amount) * x * 20 * deg) / (Math.PI + amount * Math.abs(x));\n    }\n    return curve;\n}","<div *ngIf=\"show\">\n    <div *ngIf=\"!isSafari\">\n        <button *ngIf=\"!started; else graph\">Start AudioContext</button>\n\n        <ng-template #graph>\n            <section>\n                <ng-container [ngSwitch]=\"selectedSource\">\n                    <ng-container *ngSwitchCase=\"'buffer'\">\n                        <p class=\"center font-12 theme-text-color-sec user-d\"> *user discretion is advised</p>\n                        <mat-icon class=\"play mt1 mr1 theme-text-color-prim\" *ngFor=\"let _ of buffers\"\n                            #source=\"AudioNode\" waAudioBufferSourceNode buffer=\"assets/mp3/sample.mp3\" [loop]=\"true\"\n                            (click)=\"onClick(source, $event.target)\">not_started<ng-container waAnalyserNode\n                                (timeByte$)=\"onTimeDomain($event, canvas)\">\n                                <ng-container [waOutput]=\"chain || fallback\"></ng-container>\n                            </ng-container>\n                        </mat-icon>\n                    </ng-container>\n                </ng-container>\n                <canvas #fallback=\"AudioNode\" #canvas waAudioDestinationNode height=\"120\" width=\"{{pulseWidth}}\"\n                    class=\"left pt-24\" (click)=\"onClickAudioCard1()\"></canvas>\n            </section>\n        </ng-template>\n    </div>\n    <div *ngIf=\"isSafari\">\n        <div>\n            <img class=\"disc\" [ngClass]=\"{'rotate': !stopped}\" [src]=\"discImage\" alt=\"disc\">\n        </div>\n        <mat-icon class=\"play mt1 mr1 theme-text-color-prim\" (click)=\"onClickPlayButton($event.target)\">not_started\n        </mat-icon>\n    </div>\n</div>\n<div *ngIf=\"!show\">\n    <div class=\"d-flex text-content\" style=\"padding-left: 24px;\">\n        <!-- <mat-icon class=\"play-album mt1 mr1 theme-text-color-prim\" (click) = \"showPlay()\">album\n        </mat-icon> -->\n        <div style=\"width: 80%; height: 100%;\" (click)=\"onClickAudioCard1()\">\n            <p class=\"header-elpis theme-text-color-prim\">{{card.title}}</p>\n            <!-- <p class=\"card-elpis font-merri theme-text-color-sec\" >{{card.desc}}</p> -->\n            <div class=\"left\" style=\"height: 100px; padding-top: 5px;\">\n                <mat-chip-list aria-label=\"Fish selection\">\n                    <mat-chip>\n                        <p class=\"chip-elpis\">Netflix TV Series</p>\n                    </mat-chip>\n                    <mat-chip>\n                        <p class=\"chip-elpis\">Drama</p>\n                    </mat-chip>\n                    <mat-chip>\n                        <p class=\"chip-elpis\">popcorn</p>\n                    </mat-chip>\n                    <mat-chip class=\"deskContent\">\n                        <p class=\"chip-elpis\">university</p>\n                    </mat-chip>\n                </mat-chip-list>\n            </div>\n        </div>\n        <mat-icon class=\"next theme-text-color-prim\" (click)=\"showPlay()\">navigate_next</mat-icon>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-card-small-wave',\n  templateUrl: './card-small-wave.component.html',\n  styleUrls: ['./card-small-wave.component.scss']\n})\nexport class CardSmallWaveComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>card-small-wave works!</p>\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { CommunicationService } from '../shared/communication.service';\nimport { Subscription } from 'rxjs';\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CardComponent implements OnInit {\n\n  constructor(private messageService: CommunicationService,\n    private cdRef:ChangeDetectorRef) { \n    this.subscription =  this.messageService.obscenetiy().subscribe(message => {\n      console.log(\"ujjjn\")\n      this.obscenity = message;\n      this.cdRef.detectChanges();\n  });\n  }\n  @Input()\n  type : string;\n  @Input() card;\n  card1;\n  card2;\n  readMore = true;\n  obscenity = true;\n  @Output() showAudioCard = new EventEmitter();\n  @Output() reloadCards = new EventEmitter();\n  subscription: Subscription;\n  position = new FormControl(\"below\");\n  ngOnInit(): void {\n    if(this.card.type ===\"audio\"){\n      this.card1 = this.card.data[0];\n      this.card2 = this.card.data[1];\n    }\n    if(this.card.type === \"text\" && this.card.desc.length < 600){\n        this.readMore = false;\n    }\n  }\n  updateCard(input){\n      this.showAudioCard.emit(input)\n  }\n  onClickReadMore(){\n    this.readMore = false;\n    this.reloadCards.emit(this.readMore);\n  }\n}\n","<div class=\"card2-content\">\n    <div class=\"card2 pointer\">\n        <div class=\"d-flex\" *ngIf=\"type === 'audio'\">\n            <div class=\"rel\">\n                <div class=\"audio-card-1\">\n                    <a class=\"float font-14 fw-600 theme-text-color-prim elps pointer\" matTooltip=\"{{card1.userId}}\"\n                        [matTooltipShowDelay]=\"500\" [matTooltipPosition]=\"position.value\" [matTooltipHideDelay]=\"1000\">\n                        {{card1.userId}}</a>\n                    <div>\n                        <app-card-audio [card]=\"card1\" (showAudioCard)='updateCard($event)'></app-card-audio>\n                    </div>\n                </div>\n            </div>\n            <div class=\"rel mar-left\">\n                <div class=\"audio-card-2\">\n                    <a class=\"float font-14 fw-600 theme-text-color-prim elps pointer\" matTooltip=\"{{card2.userId}}\"\n                        [matTooltipShowDelay]=\"500\" [matTooltipPosition]=\"position.value\" [matTooltipHideDelay]=\"1000\">\n                        {{card2.userId}}</a>\n                    <div>\n                        <app-card-audio [card]=\"card2\" (showAudioCard)='updateCard($event)'></app-card-audio>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"rel\">\n            <div *ngIf=\"type === 'text'\" class=\"text-card2\">\n                <a class=\"float font-14 fw-600 theme-text-color-prim elps pointer\" matTooltip=\"{{card.userId}}\"\n                    [matTooltipShowDelay]=\"500\" [matTooltipPosition]=\"position.value\" [matTooltipHideDelay]=\"1000\">\n                    {{card.userId}}</a>\n\n                <h2 *ngIf=\"obscenity\" class=\"font-merri  theme-text-color-prim pr2 fw-600\"\n                    style=\"text-align: initial;padding-left: 20px; padding-top: 23px;\">{{card.title | obscenity}}</h2>\n                <h2 *ngIf=\"!obscenity\" class=\"font-merri  theme-text-color-prim pr2 fw-600\"\n                    style=\"text-align: initial;padding-left: 20px; padding-top: 23px;\">{{card.title}}</h2>\n\n                <div class=\"pr1 pb1\" style=\"padding-left: 25px;\">\n                    <mat-chip-list aria-label=\"Fish selection\">\n                        <mat-chip [selectable]=false>\n                            <p class=\"mb0\">Netflix TV Series</p>\n                        </mat-chip>\n                        <mat-chip [selectable]=false>\n                            <p class=\"mb0\">Drama</p>\n                        </mat-chip>\n                        <mat-chip [selectable]=false>\n                            <p class=\"mb0\">university</p>\n                        </mat-chip>\n                        <mat-chip [selectable]=false>\n                            <p class=\"mb0\">popcorn</p>\n                        </mat-chip>\n                    </mat-chip-list>\n                </div>\n                <p *ngIf=\"obscenity\" class=\"font-merri theme-text-color-sec mb0 font-14\"\n                    style=\"padding-right: 20px; padding-left: 25px; text-align: initial;\"\n                    [ngClass]=\"{'card-elps': readMore}\">{{card.desc | obscenity}}</p>\n                <p *ngIf=\"!obscenity\" class=\"font-merri theme-text-color-sec mb0 font-14\"\n                    style=\"padding-right: 20px; padding-left: 25px; text-align: initial;\"\n                    [ngClass]=\"{'card-elps': readMore}\">{{card.desc}}</p>\n                <p *ngIf=\"readMore\" class=\"font-merri font-14 theme-text-color-prim underline\"\n                    (click)=\"onClickReadMore()\">read more..</p>\n                <div class=\"d-felx justify-content-end mr2 pb1\" style=\"text-align: end;\">\n                    <mat-icon class=\"theme-text-color-sec pointer mr1 mat-reply\"> reply</mat-icon>\n                    <mat-icon class=\"theme-text-color-sec pointer mr1 mat-campaign\"> campaign</mat-icon>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { AfterViewChecked, AfterViewInit, ChangeDetectionStrategy, Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { NgxMasonryComponent, NgxMasonryOptions } from 'ngx-masonry';\n\n@Component({\n  selector: 'app-cards-grid',\n  templateUrl: './cards-grid.component.html',\n  styleUrls: ['./cards-grid.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CardsGridComponent implements OnInit, AfterViewChecked {\n  @ViewChild(NgxMasonryComponent) masonry: NgxMasonryComponent;\n  count = 0;\n  init = true;\n  cards = [\n    {\n      unique_id: \"1-2\", show: false, type: \"audio\", userId: \"@monkey504564\",\n      data: [{\n        unique_id: \"1\", show: false, type: \"audio\", userId: \"@monkey504564\", title: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed doeiusmod tempor incididunt ut labore\",\n        desc: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed doeiusmod tempor incididunt ut labore etc.Ut enim ad minim veniam, quis nostrudexercitation ullamco laboris nisi ut aliquipex ea commodo consequat.\"\n      },\n      {\n        unique_id: \"2\", show: false, type: \"audio\", userId: \"@user207\", title: \"Professor John Doe, explain the concept of the term “Lorem ipsum”\",\n        desc: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed doeiusmod tempor incididunt ut labore etc.Ut enim ad minim veniam, quis nostrudexercitation ullamco laboris nisi ut aliquipex ea commodo consequat.\"\n      }]\n    },\n    { unique_id: \"3\", show: false, type: \"text\", userId: \"@yourpop603\", title: \"Through sheer determination and willpower I’m where I am today, gradually reclaiming my life.\", desc: \"I think bringing a sense of realism to the writer in the dark trope might dilute some of the lasting toxicity that may be perpetuated by having unpopular young kids rise to fame by betraying their peers.\" },\n    { unique_id: \"4\", show: false, type: \"text\", userId: \"@crackhead603\", title: \"Marvel universe went fucking crazy with this movie\", desc: \"Everyone is familiar with the act of turning to a neighbor and whispering a coveted secret. It’s messy, fun, entertaining, and hurtful even. But alas, scandal makes the world go round. Maybe that is the reason shows like Bridgerton, which had a successful season 2 premiere on March 25, are so popular. The desire for gossip is fueled by having an underdog or wallflower hold a secret power over all the elite personnel in the story. It creates a sense of triumph that a beautifully flawed background character with an alluring voice stirs the pot in a way that keeps the audience engaged and their hands clean of the mess. This writer-in-the-dark theme is not a new one; many of today’s generation grew up with it ingrained in the most popular films and shows. The first time I recall seeing this narrative was in Radio Rebel, which made its debut on the Disney Channel 10 years ago. Debby Ryan played a mousy high schooler with an anonymous influential radio show under the name of Radio Rebel, which gets more attention once people start to question her identity. The movie was mainly based on authenticity and encouraged others to be themselves, but there are moments where Radio Rebel calls her classmates out by name, sparking gossip and speculation. While this is largely a lighthearted narrative, because it’s Disney after all, it still sets a precedent for how early kids were exposed to the idea that being an underdog is acceptable if you can get people talking about each other. The next writer in the dark I observed was (spoiler alert) Dan Humphrey as Gossip Girl. Gossip Girl was a nameless blogger who terrorized Manhattan’s elite and held them accountable for each scandal and misstep. I think this narrative spoke to Gen Z particularly because it centered around technology and how phones can be mass weapons of destruction in teenage lives. Each text that Gossip Girl sent out made the audience’s eyes captivated even more. While each person watching couldn’t be a famous upper Eastsider, they could be inspired to act as their town’s gossip girl. The level of relatability makes Gossip Girl and similar characters seem like icons as if actions don’t have consequences. I shamelessly binged the second season of Bridgerton shortly after its release, which brings us to the trifecta of undercover scandal reporters. Bridgerton is narrated by Lady Whistledown who is an unidentified scandal sheet writer that observes the ton in 19th century London as lords and ladies work to find their match. Season two was filled with the most amazing enemies to lovers, pining, and tension, but I particularly liked seeing the overarching plotline of Lady Whistledown be played out more. Her true identity as unsuspecting Penelope Featherington was revealed to the audience at the end of last season, so there is little mystery left to feed on. There does seem to be some consequences shown in this version of the trope, however. As the Queen is seen trying to uncover her identity, Lady Whistledown must betray her best friend to clear her name. I liked that this narrative was somewhat realistic with the plot of betrayal sinking into mystery and notoriety. It felt more fulfilling, maybe even dramatic, to see the conflict and betrayal presented clearly. I don’t think it is the intention of any one of these productions to glamorize scheming, but as a generation raised on these forms of media, it’s easy to internalize the message. I think bringing a sense of realism to the writer in the dark trope might dilute some of the lasting toxicity that may be perpetuated by having unpopular young kids rise to fame by betraying their peers.\" },\n    {\n      unique_id: \"5-6\", show: false, type: \"audio\", userId: \"@punk207\",\n      data: [{\n        unique_id: \"5\", show: false, type: \"audio\", userId: \"@punk207\", title: \"He woke up, rolled over, and reached for her\",\n        desc: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed doeiusmod tempor incididunt ut labore etc.Ut enim ad minim veniam, quis nostrudexercitation ullamco laboris nisi ut aliquipex ea commodo consequat.\"\n      },\n      {\n        unique_id: \"6\", show: false, type: \"audio\", userId: \"@user209\", title: \"They told me they could save either my wife or my son\",\n        desc: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed doeiusmod tempor incididunt ut labore etc.Ut enim ad minim veniam, quis nostrudexercitation ullamco laboris nisi ut aliquipex ea commodo consequat.\"\n      }]\n    },\n    { unique_id: \"7\", show: false, type: \"text\", userId: \"@victim108\", title: \"Why John Mayer Should Be Scared For Speak Now (Taylor’s Version)\", desc: \"Lorem ipsum dolor sit amet, sectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velicillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam.\" },\n    { unique_id: \"8\", show: false, type: \"text\", userId: \"@user504\", title: \"Cancel Culture: Does It Have A Positive Or Negative Effect On This Generation?\", desc: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed doeiusmod tempor incididunt ut labore etc.Ut enim ad minim veniam, quis nostrudexercitation ullamco laboris nisi ut aliquipex ea commodo consequat. Duis aute iruredolor in reprehenderit in voluptate iscillum dolore eu fugiat nulla pariatur.Excepteur sint occaecat cupidatat nonproident, sunt in culpa qui officia deseruntmollit anim id est laborum. Lorem ipsum dolor sit amet, consecteturadipiscing elit, sed do eiusmod temporincididunt ut labore et dolore magna aliqua.\" },\n    { unique_id: \"9\", show: false, type: \"text\", userId: \"@user007-207\", title: \"This is my story. Don't judge!\", desc: \"On Feb 28, asine eimmn kin sad weadipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip exea commodo consequat. Duis aute irure dolor in first time in voluptate velit essecillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat nonproident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.Ut enim ad minim veniam, quis cocaineexercitation ullamco laboris nisi ut aliquip exea commodo LSD. Duis aute irure dolor in reprehenderit in voluptate velit essecillum dolore eu fugiat nulla pariatur.Excepteur sint occaecat cupidatat non  times, sunt in culpa qui officia deserunt mollit anim id est laborum. Duis aute iruredolor in reprehenderit in voluptate velit essecillum dolore eu fugiat nulla pariatur. Sunt in culpa qui officia deserunt.\" },\n    {\n      unique_id: \"10-11\", show: false, type: \"audio\", userId: \"@user007-27\",\n      data: [{\n        unique_id: \"10\", show: false, type: \"audio\", userId: \"@user007-27\", title: \"After months of waiting he finally saw his wife.\",\n        desc: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed doeiusmod tempor incididunt ut labore etc.Ut enim ad minim veniam, quis nostrudexercitation ullamco laboris nisi ut aliquipex ea commodo consequat.\"\n      },\n      {\n        unique_id: \"11\", show: false, type: \"audio\", userId: \"@user007-27\", title: \"He never wanted to leave his wife.\",\n        desc: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed doeiusmod tempor incididunt ut labore etc.Ut enim ad minim veniam, quis nostrudexercitation ullamco laboris nisi ut aliquipex ea commodo consequat.\"\n      }]\n    },\n    { unique_id: \"13\", show: false, type: \"text\", userId: \"@monkey507\", title: \"True story\", desc: \"When Ciarín passed away that was the deciding point in going to treatment for addiction. My decision changed my life for the better, I got help with that problem. That’s not to say that I am perfect. I do absolutely have problems. Being at Cedars helped me realize quickly that it wasn’t so much the drugs but my behaviours as well. I found out through my family history that I was wired an addict since the day I was born. But now I can deal with that. I have the tools to be alright with myself. I love myself today. I love who I can be and who I am. I learnt that it is okay to be who I was. I’m proud of who I am today. Thanks to a 12-Step program I can work through all of the behaviours and catch myself before I act out on them.\" },\n    {\n      unique_id: \"14-19\", show: false, type: \"audio\", userId: \"@punk207\",\n      data: [{\n        unique_id: \"14\", show: false, type: \"audio\", userId: \"@punk207\", title: \"The heart monitor chimed its final tune.\",\n        desc: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed doeiusmod tempor incididunt ut labore etc.Ut enim ad minim veniam, quis nostrudexercitation ullamco laboris nisi ut aliquipex ea commodo consequat.\"\n      },\n      {\n        unique_id: \"19\", show: false, type: \"audio\", userId: \"crack101\", title: \"I told her she would be okay.\",\n        desc: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed doeiusmod tempor incididunt ut labore etc.Ut enim ad minim veniam, quis nostrudexercitation ullamco laboris nisi ut aliquipex ea commodo consequat.\"\n      }]\n    },\n    { unique_id: \"15\", show: false, type: \"text\", userId: \"@user007-9\", title: \"Big Little Lie\", desc: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed doeiusmod tempor incididunt ut labore etc.Ut enim ad minim veniam, quis nostrudexercitation ullamco laboris nisi ut aliquipex ea commodo consequat. Duis aute iruredolor in reprehenderit in voluptate iscillum dolore eu fugiat nulla pariatur.Excepteur sint occaecat cupidatat nonproident, sunt in culpa qui officia deseruntmollit anim id est laborum. Lorem ipsum dolor sit amet, consecteturadipiscing elit, sed do eiusmod temporincididunt ut labore et dolore magna aliqua.Ut enim ad minim veniam.\" },\n    { unique_id: \"16\", show: false, type: \"text\", userId: \"@punk102\", title: \"Will The ‘Gossip Girl’ Reboot Survive In The Deuxmoi Era?\", desc: \"On Feb 28, asine eimmn kin sad weadipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip exea commodo consequat. Duis aute irure dolor in first time in voluptate velit essecillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat nonproident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.Ut enim ad minim veniam, quis cocaineexercitation ullamco laboris nisi ut aliquip exea commodo LSD. Duis aute irure dolor in reprehenderit in voluptate velit essecillum dolore eu fugiat nulla pariatur.Excepteur sint occaecat cupidatat non  times, sunt in culpa qui officia deserunt mollit anim id est laborum. Duis aute iruredolor in reprehenderit in voluptate velit essecillum dolore eu fugiat nulla pariatur. Sunt in culpa qui officia deserunt.\" },\n    // {unique_id:\"17\",show:false,type:\"audio\",userId: \"@user007-007\",data:[{unique_id:\"17\",show:false,type:\"audio\",userId: \"@user007-007\"}]},\n    { unique_id: \"18\", show: false, type: \"text\", userId: \"@monkey54\", title: \"Child Abuse\", desc: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed doeiusmod tempor incididunt ut labore etc.Ut enim ad minim veniam, quis nostrudexercitation ullamco laboris nisi ut aliquipex ea commodo consequat. Duis aute iruredolor in reprehenderit in voluptate iscillum dolore eu fugiat nulla pariatur.Excepteur sint occaecat cupidatat nonproident, sunt in culpa qui officia deseruntmollit anim id est laborum. Lorem ipsum dolor sit amet, consecteturadipiscing elit, sed do eiusmod temporincididunt ut labore et dolore magna aliqua.Ut enim ad minim veniam.\" }\n  ];\n  public myOptions: NgxMasonryOptions = {\n    gutter: 36,\n    fitWidth: true,\n  };\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  ngAfterViewChecked() {\n    if (this.init) {\n      const interval = window.setTimeout(() => {\n        if (this.init) {\n          this.masonry.layout();\n          window.clearTimeout(interval);\n          this.init = false;\n          console.log(\"initial load\")\n        }\n      }, 500);\n    }\n  }\n  updateCard(input) {\n    this.cards.filter(c => c.type === \"audio\").forEach(c => {\n      if (c.data[0].unique_id !== input.unique_id)\n        c.data[0].show = false\n      if (c.data[1].unique_id !== input.unique_id)\n        c.data[1].show = false\n    });\n  }\n  reloadCards(input) {\n    this.masonry.layout();\n  }\n}","<div class=\"main\">\n    <ngx-masonry class=\"ngx-masonry\" [options]=\"myOptions\"> \n        <app-card ngxMasonryItem class=\"masonry-item\" (showAudioCard) = 'updateCard($event)' (reloadCards) = \"reloadCards($event)\"\n        *ngFor = \"let card of cards\" [type]=\"card.type\" [card]=\"card\">\n        </app-card>\n    </ngx-masonry>\n</div>\n<!-- \n<app-card-wave></app-card-wave> -->","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-confess',\n  templateUrl: './confess.component.html',\n  styleUrls: ['./confess.component.scss']\n})\nexport class ConfessComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>confess works!</p>\n","export const POLLING_TIME = 100;\n","import {AudioNodeWithParams} from '../types/audio-node-with-params';\nimport {\n    AudioParamDecorator,\n    AudioParamWorkletDecorator,\n} from '../types/audio-param-decorator';\nimport {AudioParamInput} from '../types/audio-param-input';\nimport {processAudioParam} from '../utils/process-audio-param';\n\nexport function audioParam(): AudioParamWorkletDecorator;\nexport function audioParam<K extends string>(param: K): AudioParamDecorator<K>;\nexport function audioParam<K extends string>(\n    param: string = '',\n): AudioParamDecorator<K> | AudioParamWorkletDecorator {\n    const decorator: AudioParamDecorator<K> = (target, propertyKey) => {\n        Object.defineProperty(target, propertyKey, {\n            set(this: AudioNodeWithParams<K> | AudioWorkletNode, value: AudioParamInput) {\n                value = typeof value === 'string' ? Number.parseFloat(value) : value;\n\n                const audioParam =\n                    this instanceof AudioWorkletNode\n                        ? (this.parameters as Map<string, AudioParam | undefined>).get(\n                              propertyKey,\n                          )\n                        : this[param as K];\n\n                if (audioParam instanceof AudioParam) {\n                    processAudioParam(audioParam, value, this.context.currentTime);\n                } else {\n                    // Fallback for older browsers\n                    Object.defineProperty(target, propertyKey, {value});\n                }\n            },\n        });\n    };\n\n    return decorator;\n}\n","import {Attribute, Directive, forwardRef, OnDestroy} from '@angular/core';\nimport {AUDIO_CONTEXT} from '../tokens/audio-context';\nimport {latencyHintFactory} from '../utils/latency-hint-factory';\n\n// @dynamic\n@Directive({\n    selector: '[waAudioContext]',\n    providers: [\n        {\n            provide: AUDIO_CONTEXT,\n            useExisting: forwardRef(() => WebAudioContext),\n        },\n    ],\n})\nexport class WebAudioContext extends AudioContext implements OnDestroy {\n    constructor(\n        @Attribute('latencyHint') latencyHint: AudioContextLatencyCategory | null,\n        @Attribute('sampleRate') sampleRate: string | null,\n    ) {\n        super({\n            latencyHint: latencyHintFactory(latencyHint),\n            sampleRate: parseInt(sampleRate || '', 10) || undefined,\n        });\n    }\n\n    ngOnDestroy() {\n        this.close();\n    }\n}\n","import {Directive, Inject, OnDestroy} from '@angular/core';\nimport {AUDIO_CONTEXT} from '../tokens/audio-context';\nimport {CONSTRUCTOR_SUPPORT} from '../tokens/constructor-support';\n\n// @dynamic\n@Directive({\n    selector: '[waChannel]',\n    exportAs: 'AudioNode',\n})\nexport class WebAudioChannel extends GainNode implements OnDestroy {\n    constructor(\n        @Inject(AUDIO_CONTEXT) context: BaseAudioContext,\n        @Inject(CONSTRUCTOR_SUPPORT) modern: boolean,\n    ) {\n        if (modern) {\n            super(context);\n        } else {\n            const result = context.createGain();\n\n            Object.setPrototypeOf(result, WebAudioChannel.prototype);\n\n            return result as WebAudioChannel;\n        }\n    }\n\n    ngOnDestroy() {\n        this.disconnect();\n    }\n}\n","import {Directive, Inject, OnDestroy, Output} from '@angular/core';\nimport {interval, Observable} from 'rxjs';\nimport {\n    debounceTime,\n    distinctUntilChanged,\n    filter,\n    map,\n    mapTo,\n    skipWhile,\n    tap,\n} from 'rxjs/operators';\nimport {POLLING_TIME} from '../constants/polling-time';\nimport {AUDIO_CONTEXT} from '../tokens/audio-context';\nimport {AUDIO_NODE} from '../tokens/audio-node';\nimport {CONSTRUCTOR_SUPPORT} from '../tokens/constructor-support';\nimport {connect} from '../utils/connect';\n\n// @dynamic\n@Directive({\n    selector: '[waAudioDestinationNode]',\n    exportAs: 'AudioNode',\n})\nexport class WebAudioDestination extends AnalyserNode implements OnDestroy {\n    @Output()\n    quiet?: Observable<unknown>;\n\n    constructor(\n        @Inject(AUDIO_CONTEXT) context: BaseAudioContext,\n        @Inject(AUDIO_NODE) node: AudioNode | null,\n        @Inject(CONSTRUCTOR_SUPPORT) modern: boolean,\n    ) {\n        if (modern) {\n            super(context);\n            WebAudioDestination.init(this, node);\n        } else {\n            const result = context.createAnalyser() as WebAudioDestination;\n\n            Object.setPrototypeOf(result, WebAudioDestination.prototype);\n            WebAudioDestination.init(result, node);\n\n            return result;\n        }\n    }\n\n    ngOnDestroy() {\n        this.disconnect();\n    }\n\n    private isSilent(array: Float32Array): boolean {\n        return Math.abs(array.reduce((acc, cur) => acc + cur, 0)) < 0.001;\n    }\n\n    static init(that: WebAudioDestination, node: AudioNode | null) {\n        connect(\n            node,\n            that,\n        );\n        that.fftSize = 256;\n        that.connect(that.context.destination);\n        that.quiet = interval(POLLING_TIME).pipe(\n            mapTo(new Float32Array(that.fftSize)),\n            tap(array => that.getFloatTimeDomainData(array)),\n            map(array => that.isSilent(array)),\n            distinctUntilChanged(),\n            skipWhile(isSilent => isSilent),\n            debounceTime(5000),\n            filter(isSilent => isSilent),\n        );\n    }\n}\n","import {Directive, Inject, Input, OnChanges, Self} from '@angular/core';\nimport {audioParam} from '../decorators/audio-param';\nimport {AUDIO_CONTEXT} from '../tokens/audio-context';\nimport {CONSTRUCTOR_SUPPORT} from '../tokens/constructor-support';\nimport {AudioParamInput} from '../types/audio-param-input';\nimport {fallbackAudioParam} from '../utils/fallback-audio-param';\n\n// @dynamic\n@Directive({\n    selector: '[waAudioContext],[waOfflineAudioContext][length][sampleRate]',\n})\nexport class WebAudioListener extends GainNode implements OnChanges {\n    @Input('forwardX')\n    @audioParam('forwardX')\n    forwardXParam?: AudioParamInput;\n\n    @Input('forwardY')\n    @audioParam('forwardY')\n    forwardYParam?: AudioParamInput;\n\n    @Input('forwardZ')\n    @audioParam('forwardZ')\n    forwardZParam?: AudioParamInput;\n\n    @Input('positionX')\n    @audioParam('positionX')\n    positionXParam?: AudioParamInput;\n\n    @Input('positionY')\n    @audioParam('positionY')\n    positionYParam?: AudioParamInput;\n\n    @Input('positionZ')\n    @audioParam('positionZ')\n    positionZParam?: AudioParamInput;\n\n    @Input('upX')\n    @audioParam('upX')\n    upXParam?: AudioParamInput;\n\n    @Input('upY')\n    @audioParam('upY')\n    upYParam?: AudioParamInput;\n\n    @Input('upZ')\n    @audioParam('upZ')\n    upZParam?: AudioParamInput;\n\n    constructor(\n        @Self() @Inject(AUDIO_CONTEXT) context: BaseAudioContext,\n        @Inject(CONSTRUCTOR_SUPPORT) modern: boolean,\n    ) {\n        if (modern) {\n            super(context);\n        } else {\n            const result = context.createGain();\n\n            Object.setPrototypeOf(result, WebAudioListener.prototype);\n\n            return result as WebAudioListener;\n        }\n    }\n\n    get forwardX(): AudioParam {\n        return this.context.listener.forwardX;\n    }\n\n    get forwardY(): AudioParam {\n        return this.context.listener.forwardY;\n    }\n\n    get forwardZ(): AudioParam {\n        return this.context.listener.forwardZ;\n    }\n\n    get positionX(): AudioParam {\n        return this.context.listener.positionX;\n    }\n\n    get positionY(): AudioParam {\n        return this.context.listener.positionY;\n    }\n\n    get positionZ(): AudioParam {\n        return this.context.listener.positionZ;\n    }\n\n    get upX(): AudioParam {\n        return this.context.listener.upX;\n    }\n\n    get upY(): AudioParam {\n        return this.context.listener.upY;\n    }\n\n    get upZ(): AudioParam {\n        return this.context.listener.upZ;\n    }\n\n    ngOnChanges() {\n        if (this.context.listener.positionX instanceof AudioParam) {\n            return;\n        }\n\n        // Fallback for older browsers\n        this.context.listener.setOrientation(\n            fallbackAudioParam(this.forwardXParam),\n            fallbackAudioParam(this.forwardYParam),\n            fallbackAudioParam(this.forwardZParam),\n            fallbackAudioParam(this.upXParam),\n            fallbackAudioParam(this.upYParam),\n            fallbackAudioParam(this.upZParam),\n        );\n        this.context.listener.setPosition(\n            fallbackAudioParam(this.positionXParam),\n            fallbackAudioParam(this.positionYParam),\n            fallbackAudioParam(this.positionZParam),\n        );\n    }\n}\n","import {Attribute, Directive, EventEmitter, forwardRef, Output} from '@angular/core';\nimport {AUDIO_CONTEXT} from '../tokens/audio-context';\n\n// @dynamic\n@Directive({\n    selector: '[waOfflineAudioContext][length][sampleRate]',\n    providers: [\n        {\n            provide: AUDIO_CONTEXT,\n            useExisting: forwardRef(() => WebAudioOfflineContext),\n        },\n    ],\n})\nexport class WebAudioOfflineContext extends OfflineAudioContext {\n    @Output()\n    readonly complete = new EventEmitter<AudioBuffer>();\n\n    readonly oncomplete = ({renderedBuffer}: OfflineAudioCompletionEvent) =>\n        this.complete.emit(renderedBuffer);\n\n    constructor(\n        @Attribute('length') length: string,\n        @Attribute('sampleRate') sampleRate: string,\n        @Attribute('numberOfChannels') numberOfChannels: string | null,\n        @Attribute('autoplay') autoplay: string | null,\n    ) {\n        super(\n            parseInt(numberOfChannels || '', 10) || 1,\n            parseInt(length, 10),\n            parseInt(sampleRate, 10),\n        );\n\n        if (autoplay !== null) {\n            this.startRendering();\n        }\n    }\n}\n","import {Directive, Inject, Input, OnDestroy} from '@angular/core';\nimport {AUDIO_CONTEXT} from '../tokens/audio-context';\nimport {AUDIO_NODE} from '../tokens/audio-node';\nimport {CONSTRUCTOR_SUPPORT} from '../tokens/constructor-support';\nimport {connect} from '../utils/connect';\n\n// @dynamic\n@Directive({\n    selector: '[waOutput]',\n})\nexport class WebAudioOutput extends GainNode implements OnDestroy {\n    @Input()\n    set waOutput(destination: AudioNode | AudioParam | undefined) {\n        this.disconnect();\n        connect(\n            this,\n            destination,\n        );\n    }\n\n    constructor(\n        @Inject(AUDIO_CONTEXT) context: BaseAudioContext,\n        @Inject(AUDIO_NODE) node: AudioNode | null,\n        @Inject(CONSTRUCTOR_SUPPORT) modern: boolean,\n    ) {\n        if (modern) {\n            super(context);\n            connect(\n                node,\n                this,\n            );\n        } else {\n            const result = context.createGain();\n\n            Object.setPrototypeOf(result, WebAudioOutput.prototype);\n            connect(\n                node,\n                result,\n            );\n\n            return result as WebAudioOutput;\n        }\n    }\n\n    ngOnDestroy() {\n        this.disconnect();\n    }\n\n    static init(that: WebAudioOutput, node: AudioNode | null) {\n        connect(\n            node,\n            that,\n        );\n    }\n}\n","import {Directive, Inject} from '@angular/core';\nimport {AUDIO_CONTEXT} from '../tokens/audio-context';\nimport {AUDIO_NODE} from '../tokens/audio-node';\nimport {CONSTRUCTOR_SUPPORT} from '../tokens/constructor-support';\nimport {connect} from '../utils/connect';\n\n// @dynamic\n@Directive({\n    selector: '[waMediaStreamAudioDestinationNode]',\n    exportAs: 'AudioNode',\n})\nexport class WebAudioMediaStreamDestination extends MediaStreamAudioDestinationNode {\n    constructor(\n        @Inject(AUDIO_CONTEXT) context: AudioContext,\n        @Inject(AUDIO_NODE) node: AudioNode | null,\n        @Inject(CONSTRUCTOR_SUPPORT) modern: boolean,\n    ) {\n        if (modern) {\n            super(context);\n            connect(\n                node,\n                this,\n            );\n        } else {\n            const result = context.createMediaStreamDestination();\n\n            Object.setPrototypeOf(result, WebAudioMediaStreamDestination.prototype);\n            connect(\n                node,\n                result,\n            );\n\n            return result as WebAudioMediaStreamDestination;\n        }\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {WebAudioContext} from './directives/audio-context';\nimport {WebAudioChannel} from './directives/channel';\nimport {WebAudioDestination} from './directives/destination';\nimport {WebAudioListener} from './directives/listener';\nimport {WebAudioOfflineContext} from './directives/offline-audio-context';\nimport {WebAudioOutput} from './directives/output';\nimport {WebAudioMediaStreamDestination} from './directives/stream-destination';\nimport {WebAudioAnalyser} from './nodes/analyser';\nimport {WebAudioBiquadFilter} from './nodes/biquad-filter';\nimport {WebAudioChannelMerger} from './nodes/channel-merger';\nimport {WebAudioChannelSplitter} from './nodes/channel-splitter';\nimport {WebAudioConvolver} from './nodes/convolver';\nimport {WebAudioDelay} from './nodes/delay';\nimport {WebAudioDynamicsCompressor} from './nodes/dynamics-compressor';\nimport {WebAudioGain} from './nodes/gain';\nimport {WebAudioIIRFilter} from './nodes/iir-filter';\nimport {WebAudioPanner} from './nodes/panner';\nimport {WebAudioScriptProcessor} from './nodes/script-processor';\nimport {WebAudioStereoPanner} from './nodes/stereo-panner';\nimport {WebAudioWaveShaper} from './nodes/wave-shaper';\nimport {WebAudioWorklet} from './nodes/worklet';\nimport {WebAudioParamPipe} from './pipes/audio-param.pipe';\nimport {WebAudioPeriodicWavePipe} from './pipes/periodic-wave.pipe';\nimport {WebAudioBufferSource} from './sources/buffer-source';\nimport {WebAudioConstantSource} from './sources/constant-source';\nimport {WebAudioMediaSource} from './sources/media-source';\nimport {WebAudioMediaStreamSource} from './sources/media-stream-source';\nimport {WebAudioMediaStreamTrackSource} from './sources/media-stream-track-source';\n\n@NgModule({\n    declarations: [\n        WebAudioContext,\n        WebAudioChannel,\n        WebAudioDestination,\n        WebAudioListener,\n        WebAudioOfflineContext,\n        WebAudioOutput,\n        WebAudioMediaStreamDestination,\n        WebAudioBufferSource,\n        WebAudioConstantSource,\n        WebAudioMediaSource,\n        WebAudioMediaStreamSource,\n        WebAudioMediaStreamTrackSource,\n        WebAudioAnalyser,\n        WebAudioBiquadFilter,\n        WebAudioChannelSplitter,\n        WebAudioChannelMerger,\n        WebAudioConvolver,\n        WebAudioDelay,\n        WebAudioDynamicsCompressor,\n        WebAudioGain,\n        WebAudioIIRFilter,\n        WebAudioPanner,\n        WebAudioScriptProcessor,\n        WebAudioStereoPanner,\n        WebAudioWaveShaper,\n        WebAudioWorklet,\n        WebAudioParamPipe,\n        WebAudioPeriodicWavePipe,\n    ],\n    exports: [\n        WebAudioContext,\n        WebAudioChannel,\n        WebAudioDestination,\n        WebAudioListener,\n        WebAudioOfflineContext,\n        WebAudioOutput,\n        WebAudioMediaStreamDestination,\n        WebAudioBufferSource,\n        WebAudioConstantSource,\n        WebAudioMediaSource,\n        WebAudioMediaStreamSource,\n        WebAudioMediaStreamTrackSource,\n        WebAudioAnalyser,\n        WebAudioBiquadFilter,\n        WebAudioChannelSplitter,\n        WebAudioChannelMerger,\n        WebAudioConvolver,\n        WebAudioDelay,\n        WebAudioDynamicsCompressor,\n        WebAudioGain,\n        WebAudioIIRFilter,\n        WebAudioPanner,\n        WebAudioScriptProcessor,\n        WebAudioStereoPanner,\n        WebAudioWaveShaper,\n        WebAudioWorklet,\n        WebAudioParamPipe,\n        WebAudioPeriodicWavePipe,\n    ],\n})\nexport class CustWebAudioModule {}\n","import {\n    Attribute,\n    Directive,\n    forwardRef,\n    Inject,\n    OnDestroy,\n    Output,\n    SkipSelf,\n} from '@angular/core';\nimport {animationFrameScheduler, interval, Observable} from 'rxjs';\nimport {map, mapTo, tap} from 'rxjs/operators';\nimport {AUDIO_CONTEXT} from '../tokens/audio-context';\nimport {AUDIO_NODE} from '../tokens/audio-node';\nimport {CONSTRUCTOR_SUPPORT} from '../tokens/constructor-support';\nimport {connect} from '../utils/connect';\nimport {parse} from '../utils/parse';\n\n// @dynamic\n@Directive({\n    selector: '[waAnalyserNode]',\n    exportAs: 'AudioNode',\n    inputs: [\n        'fftSize',\n        'minDecibels',\n        'maxDecibels',\n        'smoothingTimeConstant',\n        'channelCount',\n        'channelCountMode',\n        'channelInterpretation',\n    ],\n    providers: [\n        {\n            provide: AUDIO_NODE,\n            useExisting: forwardRef(() => WebAudioAnalyser),\n        },\n    ],\n})\nexport class WebAudioAnalyser extends AnalyserNode implements OnDestroy {\n    // '!' because it is actually set in constructor\n    @Output()\n    frequencyByte$!: Observable<Uint8Array>;\n\n    @Output()\n    frequencyFloat$!: Observable<Float32Array>;\n\n    @Output()\n    timeByte$!: Observable<Uint8Array>;\n\n    @Output()\n    timeFloat$!: Observable<Float32Array>;\n\n    constructor(\n        @Inject(AUDIO_CONTEXT) context: BaseAudioContext,\n        @SkipSelf() @Inject(AUDIO_NODE) node: AudioNode | null,\n        @Inject(CONSTRUCTOR_SUPPORT) modern: boolean,\n        @Attribute('fftSize') fftSizeArg: string | null,\n        @Attribute('maxDecibels') maxDecibelsArg: string | null,\n        @Attribute('minDecibels') minDecibelsArg: string | null,\n        @Attribute('smoothingTimeConstant') smoothingTimeConstantArg: string | null,\n    ) {\n        const fftSize = parse(fftSizeArg, 2048);\n        const maxDecibels = parse(maxDecibelsArg, -30);\n        const minDecibels = parse(minDecibelsArg, -100);\n        const smoothingTimeConstant = parse(smoothingTimeConstantArg, 0.8);\n\n        if (modern) {\n            super(context, {fftSize, maxDecibels, minDecibels, smoothingTimeConstant});\n            WebAudioAnalyser.init(this, node);\n        } else {\n            const result = context.createAnalyser() as WebAudioAnalyser;\n\n            Object.setPrototypeOf(result, WebAudioAnalyser.prototype);\n            WebAudioAnalyser.init(result, node);\n\n            result.fftSize = fftSize;\n            result.maxDecibels = maxDecibels;\n            result.minDecibels = minDecibels;\n            result.smoothingTimeConstant = smoothingTimeConstant;\n\n            return result;\n        }\n    }\n\n    ngOnDestroy() {\n        this.disconnect();\n    }\n\n    static init(that: WebAudioAnalyser, node: AudioNode | null) {\n        connect(\n            node,\n            that,\n        );\n\n        that.frequencyByte$ = interval(0, animationFrameScheduler).pipe(\n            mapTo(new Uint8Array(that.frequencyBinCount)),\n            map(array =>\n                array.length === that.frequencyBinCount\n                    ? array\n                    : new Uint8Array(that.frequencyBinCount),\n            ),\n            tap(array => that.getByteFrequencyData(array)),\n        );\n\n        that.frequencyFloat$ = interval(0, animationFrameScheduler).pipe(\n            mapTo(new Float32Array(that.frequencyBinCount)),\n            map(array =>\n                array.length === that.frequencyBinCount\n                    ? array\n                    : new Float32Array(that.frequencyBinCount),\n            ),\n            tap(array => that.getFloatFrequencyData(array)),\n        );\n\n        that.timeByte$ = interval(0, animationFrameScheduler).pipe(\n            mapTo(new Uint8Array(that.fftSize)),\n            map(array =>\n                array.length === that.fftSize ? array : new Uint8Array(that.fftSize),\n            ),\n            tap(array => that.getByteTimeDomainData(array)),\n        );\n\n        that.timeFloat$ = interval(0, animationFrameScheduler).pipe(\n            mapTo(new Float32Array(that.fftSize)),\n            map(array =>\n                array.length === that.fftSize ? array : new Float32Array(that.fftSize),\n            ),\n            tap(array => that.getFloatTimeDomainData(array)),\n        );\n    }\n}\n","import {\n    Attribute,\n    Directive,\n    forwardRef,\n    Inject,\n    Input,\n    OnDestroy,\n    SkipSelf,\n} from '@angular/core';\nimport {audioParam} from '../decorators/audio-param';\nimport {AUDIO_CONTEXT} from '../tokens/audio-context';\nimport {AUDIO_NODE} from '../tokens/audio-node';\nimport {CONSTRUCTOR_SUPPORT} from '../tokens/constructor-support';\nimport {AudioParamInput} from '../types/audio-param-input';\nimport {connect} from '../utils/connect';\nimport {parse} from '../utils/parse';\n\n// @dynamic\n@Directive({\n    selector: '[waBiquadFilterNode]',\n    exportAs: 'AudioNode',\n    inputs: ['type', 'channelCount', 'channelCountMode', 'channelInterpretation'],\n    providers: [\n        {\n            provide: AUDIO_NODE,\n            useExisting: forwardRef(() => WebAudioBiquadFilter),\n        },\n    ],\n})\nexport class WebAudioBiquadFilter extends BiquadFilterNode implements OnDestroy {\n    @Input('detune')\n    @audioParam('detune')\n    detuneParam?: AudioParamInput;\n\n    @Input('frequency')\n    @audioParam('frequency')\n    frequencyParam?: AudioParamInput;\n\n    @Input('gain')\n    @audioParam('gain')\n    gainParam?: AudioParamInput;\n\n    @Input('Q')\n    @audioParam('Q')\n    qParam?: AudioParamInput;\n\n    constructor(\n        @Inject(AUDIO_CONTEXT) context: BaseAudioContext,\n        @Inject(CONSTRUCTOR_SUPPORT) modern: boolean,\n        @SkipSelf() @Inject(AUDIO_NODE) node: AudioNode | null,\n        @Attribute('detune') detuneArg: string | null,\n        @Attribute('frequency') frequencyArg: string | null,\n        @Attribute('gain') gainArg: string | null,\n        @Attribute('Q') QArg: string | null,\n    ) {\n        const detune = parse(detuneArg, 0);\n        const frequency = parse(frequencyArg, 350);\n        const gain = parse(gainArg, 0);\n        const Q = parse(QArg, 1);\n\n        if (modern) {\n            super(context, {detune, frequency, gain, Q});\n            connect(\n                node,\n                this,\n            );\n        } else {\n            const result = context.createBiquadFilter() as WebAudioBiquadFilter;\n\n            Object.setPrototypeOf(result, WebAudioBiquadFilter.prototype);\n\n            result.detune.value = detune;\n            result.frequency.value = frequency;\n            result.gain.value = gain;\n            result.Q.value = Q;\n\n            connect(\n                node,\n                result,\n            );\n\n            return result;\n        }\n    }\n\n    ngOnDestroy() {\n        this.disconnect();\n    }\n\n    static init(that: WebAudioBiquadFilter, node: AudioNode | null) {\n        connect(\n            node,\n            that,\n        );\n    }\n}\n","import {\n    Attribute,\n    ContentChildren,\n    Directive,\n    forwardRef,\n    Inject,\n    OnDestroy,\n    QueryList,\n} from '@angular/core';\nimport {WebAudioChannel} from '../directives/channel';\nimport {AUDIO_CONTEXT} from '../tokens/audio-context';\nimport {AUDIO_NODE} from '../tokens/audio-node';\nimport {CONSTRUCTOR_SUPPORT} from '../tokens/constructor-support';\n\n// @dynamic\n@Directive({\n    selector: '[waChannelMergerNode]',\n    exportAs: 'AudioNode',\n    inputs: ['channelCount', 'channelCountMode', 'channelInterpretation'],\n    providers: [\n        {\n            provide: AUDIO_NODE,\n            useExisting: forwardRef(() => WebAudioChannelMerger),\n        },\n    ],\n})\nexport class WebAudioChannelMerger extends ChannelMergerNode implements OnDestroy {\n    @ContentChildren(WebAudioChannel, {descendants: false})\n    set channels(channels: QueryList<AudioNode>) {\n        channels.forEach((node, index) => {\n            node.connect(this, 0, index);\n        });\n    }\n\n    constructor(\n        @Attribute('numberOfInputs') inputs: string | null,\n        @Inject(AUDIO_CONTEXT) context: BaseAudioContext,\n        @Inject(CONSTRUCTOR_SUPPORT) modern: boolean,\n    ) {\n        const numberOfInputs = parseInt(inputs || '', 10) || 6;\n\n        if (modern) {\n            super(context, {numberOfInputs});\n        } else {\n            const result = context.createChannelMerger(numberOfInputs);\n\n            Object.setPrototypeOf(result, WebAudioChannelMerger.prototype);\n\n            return result as WebAudioChannelMerger;\n        }\n    }\n\n    ngOnDestroy() {\n        this.disconnect();\n    }\n}\n","import {\n    Attribute,\n    ContentChildren,\n    Directive,\n    Inject,\n    OnDestroy,\n    QueryList,\n    SkipSelf,\n} from '@angular/core';\nimport {AUDIO_CONTEXT} from '../tokens/audio-context';\nimport {AUDIO_NODE} from '../tokens/audio-node';\nimport {CONSTRUCTOR_SUPPORT} from '../tokens/constructor-support';\nimport {connect} from '../utils/connect';\n\n// @dynamic\n@Directive({\n    selector: '[waChannelSplitterNode]',\n    exportAs: 'AudioNode',\n    inputs: ['channelCount', 'channelCountMode', 'channelInterpretation'],\n    providers: [\n        {\n            provide: AUDIO_NODE,\n            useValue: null,\n        },\n    ],\n})\nexport class WebAudioChannelSplitter extends ChannelSplitterNode implements OnDestroy {\n    @ContentChildren(AUDIO_NODE as any, {descendants: false})\n    set channels(channels: QueryList<AudioNode | null>) {\n        this.disconnect();\n        channels\n            .filter(node => !!node)\n            .forEach((node, index) => {\n                this.connect(node!, index);\n            });\n    }\n\n    constructor(\n        @Attribute('numberOfOutputs') outputs: string | null,\n        @Inject(AUDIO_CONTEXT) context: BaseAudioContext,\n        @SkipSelf() @Inject(AUDIO_NODE) node: AudioNode | null,\n        @Inject(CONSTRUCTOR_SUPPORT) modern: boolean,\n    ) {\n        const numberOfOutputs = parseInt(outputs || '', 10) || 6;\n\n        if (modern) {\n            super(context, {numberOfOutputs});\n            connect(\n                node,\n                this,\n            );\n        } else {\n            const result = context.createChannelSplitter(numberOfOutputs);\n\n            Object.setPrototypeOf(result, WebAudioChannelSplitter.prototype);\n            connect(\n                node,\n                result,\n            );\n\n            return result as WebAudioChannelSplitter;\n        }\n    }\n\n    ngOnDestroy() {\n        this.disconnect();\n    }\n}\n","import {Directive, forwardRef, Inject, Input, OnDestroy, SkipSelf} from '@angular/core';\nimport {of, Subject} from 'rxjs';\nimport {switchMap} from 'rxjs/operators';\nimport {AudioBufferService} from '../services/audio-buffer.service';\nimport {AUDIO_CONTEXT} from '../tokens/audio-context';\nimport {AUDIO_NODE} from '../tokens/audio-node';\nimport {CONSTRUCTOR_SUPPORT} from '../tokens/constructor-support';\nimport {connect} from '../utils/connect';\n\n// @dynamic\n@Directive({\n    selector: '[waConvolverNode]',\n    exportAs: 'AudioNode',\n    inputs: ['normalize', 'channelCount', 'channelCountMode', 'channelInterpretation'],\n    providers: [\n        {\n            provide: AUDIO_NODE,\n            useExisting: forwardRef(() => WebAudioConvolver),\n        },\n    ],\n})\nexport class WebAudioConvolver extends ConvolverNode implements OnDestroy {\n    @Input('buffer')\n    set bufferSetter(source: AudioBuffer | null | string) {\n        this.buffer$.next(source);\n    }\n\n    buffer$!: Subject<AudioBuffer | null | string>;\n\n    constructor(\n        @Inject(AudioBufferService) audioBufferService: AudioBufferService,\n        @Inject(AUDIO_CONTEXT) context: BaseAudioContext,\n        @SkipSelf() @Inject(AUDIO_NODE) node: AudioNode | null,\n        @Inject(CONSTRUCTOR_SUPPORT) modern: boolean,\n    ) {\n        if (modern) {\n            super(context);\n            WebAudioConvolver.init(this, node, audioBufferService);\n        } else {\n            const result = context.createConvolver() as WebAudioConvolver;\n\n            Object.setPrototypeOf(result, WebAudioConvolver.prototype);\n            WebAudioConvolver.init(result, node, audioBufferService);\n\n            return result;\n        }\n    }\n\n    ngOnDestroy() {\n        this.buffer$.complete();\n        this.disconnect();\n    }\n\n    static init(\n        that: WebAudioConvolver,\n        node: AudioNode | null,\n        audioBufferService: AudioBufferService,\n    ) {\n        connect(\n            node,\n            that,\n        );\n        that.buffer$ = new Subject<AudioBuffer | null | string>();\n        that.buffer$\n            .pipe(\n                switchMap(source =>\n                    typeof source === 'string'\n                        ? audioBufferService.fetch(source)\n                        : of(source),\n                ),\n            )\n            .subscribe(buffer => {\n                that.buffer = buffer;\n            });\n    }\n}\n","import {\n    Attribute,\n    Directive,\n    forwardRef,\n    Inject,\n    Input,\n    OnDestroy,\n    SkipSelf,\n} from '@angular/core';\nimport {audioParam} from '../decorators/audio-param';\nimport {AUDIO_CONTEXT} from '../tokens/audio-context';\nimport {AUDIO_NODE} from '../tokens/audio-node';\nimport {CONSTRUCTOR_SUPPORT} from '../tokens/constructor-support';\nimport {AudioParamInput} from '../types/audio-param-input';\nimport {connect} from '../utils/connect';\nimport {parse} from '../utils/parse';\n\n// @dynamic\n@Directive({\n    selector: '[waDelayNode]',\n    exportAs: 'AudioNode',\n    inputs: ['channelCount', 'channelCountMode', 'channelInterpretation'],\n    providers: [\n        {\n            provide: AUDIO_NODE,\n            useExisting: forwardRef(() => WebAudioDelay),\n        },\n    ],\n})\nexport class WebAudioDelay extends DelayNode implements OnDestroy {\n    @Input('delayTime')\n    @audioParam('delayTime')\n    delayTimeParam?: AudioParamInput;\n\n    constructor(\n        @Inject(AUDIO_CONTEXT) context: BaseAudioContext,\n        @SkipSelf() @Inject(AUDIO_NODE) node: AudioNode | null,\n        @Inject(CONSTRUCTOR_SUPPORT) modern: boolean,\n        @Attribute('delayTime') delayTimeArg: string | null,\n        @Attribute('maxDelayTime') maxDelayTimeArg: string | null,\n    ) {\n        const delayTime = parse(delayTimeArg, 0);\n        const maxDelayTime = parse(maxDelayTimeArg, 1);\n\n        if (modern) {\n            super(context, {delayTime, maxDelayTime});\n            connect(\n                node,\n                this,\n            );\n        } else {\n            const result = context.createDelay(maxDelayTime) as WebAudioDelay;\n\n            Object.setPrototypeOf(result, WebAudioDelay.prototype);\n            connect(\n                node,\n                result,\n            );\n            result.delayTime.value = delayTime;\n\n            return result;\n        }\n    }\n\n    ngOnDestroy() {\n        this.disconnect();\n    }\n\n    static init(that: WebAudioDelay, node: AudioNode | null) {\n        connect(\n            node,\n            that,\n        );\n    }\n}\n","import {\n    Attribute,\n    Directive,\n    forwardRef,\n    Inject,\n    Input,\n    OnDestroy,\n    SkipSelf,\n} from '@angular/core';\nimport {audioParam} from '../decorators/audio-param';\nimport {AUDIO_CONTEXT} from '../tokens/audio-context';\nimport {AUDIO_NODE} from '../tokens/audio-node';\nimport {CONSTRUCTOR_SUPPORT} from '../tokens/constructor-support';\nimport {AudioParamInput} from '../types/audio-param-input';\nimport {connect} from '../utils/connect';\nimport {parse} from '../utils/parse';\n\n// @dynamic\n@Directive({\n    selector: '[waDynamicsCompressorNode]',\n    exportAs: 'AudioNode',\n    inputs: ['channelCount', 'channelCountMode', 'channelInterpretation'],\n    providers: [\n        {\n            provide: AUDIO_NODE,\n            useExisting: forwardRef(() => WebAudioDynamicsCompressor),\n        },\n    ],\n})\nexport class WebAudioDynamicsCompressor extends DynamicsCompressorNode\n    implements OnDestroy {\n    @Input('attack')\n    @audioParam('attack')\n    attackParam?: AudioParamInput;\n\n    @Input('knee')\n    @audioParam('knee')\n    kneeParam?: AudioParamInput;\n\n    @Input('ratio')\n    @audioParam('ratio')\n    ratioParam?: AudioParamInput;\n\n    @Input('release')\n    @audioParam('release')\n    releaseParam?: AudioParamInput;\n\n    @Input('threshold')\n    @audioParam('threshold')\n    thresholdParam?: AudioParamInput;\n\n    constructor(\n        @Inject(AUDIO_CONTEXT) context: BaseAudioContext,\n        @SkipSelf() @Inject(AUDIO_NODE) node: AudioNode | null,\n        @Inject(CONSTRUCTOR_SUPPORT) modern: boolean,\n        @Attribute('attack') attackArg: string | null,\n        @Attribute('knee') kneeArg: string | null,\n        @Attribute('ratio') ratioArg: string | null,\n        @Attribute('release') releaseArg: string | null,\n        @Attribute('threshold') thresholdArg: string | null,\n    ) {\n        const attack = parse(attackArg, 0.003);\n        const knee = parse(kneeArg, 30);\n        const ratio = parse(ratioArg, 12);\n        const release = parse(releaseArg, 0.25);\n        const threshold = parse(thresholdArg, -24);\n\n        if (modern) {\n            super(context, {attack, knee, ratio, release, threshold});\n            connect(\n                node,\n                this,\n            );\n        } else {\n            const result = context.createDynamicsCompressor() as WebAudioDynamicsCompressor;\n\n            Object.setPrototypeOf(result, WebAudioDynamicsCompressor.prototype);\n            connect(\n                node,\n                result,\n            );\n            result.attack.value = attack;\n            result.knee.value = knee;\n            result.ratio.value = ratio;\n            result.release.value = release;\n            result.threshold.value = threshold;\n\n            return result;\n        }\n    }\n\n    ngOnDestroy() {\n        this.disconnect();\n    }\n}\n","import {\n    Attribute,\n    Directive,\n    forwardRef,\n    Inject,\n    Input,\n    OnDestroy,\n    SkipSelf,\n} from '@angular/core';\nimport {audioParam} from '../decorators/audio-param';\nimport {AUDIO_CONTEXT} from '../tokens/audio-context';\nimport {AUDIO_NODE} from '../tokens/audio-node';\nimport {CONSTRUCTOR_SUPPORT} from '../tokens/constructor-support';\nimport {AudioParamInput} from '../types/audio-param-input';\nimport {connect} from '../utils/connect';\nimport {parse} from '../utils/parse';\n\n// @dynamic\n@Directive({\n    selector: '[waGainNode]',\n    exportAs: 'AudioNode',\n    inputs: ['channelCount', 'channelCountMode', 'channelInterpretation'],\n    providers: [\n        {\n            provide: AUDIO_NODE,\n            useExisting: forwardRef(() => WebAudioGain),\n        },\n    ],\n})\nexport class WebAudioGain extends GainNode implements OnDestroy {\n    @Input('gain')\n    @audioParam('gain')\n    gainParam?: AudioParamInput;\n\n    constructor(\n        @Inject(AUDIO_CONTEXT) context: BaseAudioContext,\n        @SkipSelf() @Inject(AUDIO_NODE) node: AudioNode | null,\n        @Inject(CONSTRUCTOR_SUPPORT) modern: boolean,\n        @Attribute('gain') gainArg: string | null,\n    ) {\n        const gain = parse(gainArg, 1);\n\n        if (modern) {\n            super(context, {gain});\n            connect(\n                node,\n                this,\n            );\n        } else {\n            const result = context.createGain() as WebAudioGain;\n\n            Object.setPrototypeOf(result, WebAudioGain.prototype);\n            connect(\n                node,\n                result,\n            );\n            result.gain.value = gain;\n\n            return result;\n        }\n    }\n\n    ngOnDestroy() {\n        this.disconnect();\n    }\n}\n","import {Directive, forwardRef, Inject, OnDestroy, SkipSelf} from '@angular/core';\nimport {AUDIO_CONTEXT} from '../tokens/audio-context';\nimport {AUDIO_NODE} from '../tokens/audio-node';\nimport {CONSTRUCTOR_SUPPORT} from '../tokens/constructor-support';\nimport {FEEDBACK_COEFFICIENTS} from '../tokens/feedback-coefficients';\nimport {FEEDFORWARD_COEFFICIENTS} from '../tokens/feedforward-coefficients';\nimport {connect} from '../utils/connect';\n\n// @dynamic\n@Directive({\n    selector: '[waIIRFilterNode]',\n    exportAs: 'AudioNode',\n    inputs: ['channelCount', 'channelCountMode', 'channelInterpretation'],\n    providers: [\n        {\n            provide: AUDIO_NODE,\n            useExisting: forwardRef(() => WebAudioIIRFilter),\n        },\n    ],\n})\nexport class WebAudioIIRFilter extends IIRFilterNode implements OnDestroy {\n    constructor(\n        @Inject(FEEDBACK_COEFFICIENTS) feedback: number[],\n        @Inject(FEEDFORWARD_COEFFICIENTS) feedforward: number[],\n        @Inject(AUDIO_CONTEXT) context: BaseAudioContext,\n        @Inject(CONSTRUCTOR_SUPPORT) modern: boolean,\n        @SkipSelf() @Inject(AUDIO_NODE) node: AudioNode | null,\n    ) {\n        if (modern) {\n            super(context, {feedback, feedforward});\n            connect(\n                node,\n                this,\n            );\n        } else {\n            const result = context.createIIRFilter(\n                feedback,\n                feedforward,\n            ) as WebAudioIIRFilter;\n\n            Object.setPrototypeOf(result, WebAudioIIRFilter.prototype);\n            connect(\n                node,\n                result,\n            );\n\n            return result;\n        }\n    }\n\n    ngOnDestroy() {\n        this.disconnect();\n    }\n}\n","import {\n    Directive,\n    forwardRef,\n    Inject,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SkipSelf,\n} from '@angular/core';\nimport {audioParam} from '../decorators/audio-param';\nimport {AUDIO_CONTEXT} from '../tokens/audio-context';\nimport {AUDIO_NODE} from '../tokens/audio-node';\nimport {CONSTRUCTOR_SUPPORT} from '../tokens/constructor-support';\nimport {AudioParamInput} from '../types/audio-param-input';\nimport {connect} from '../utils/connect';\nimport {fallbackAudioParam} from '../utils/fallback-audio-param';\n\n// @dynamic\n@Directive({\n    selector: '[waPannerNode]',\n    exportAs: 'AudioNode',\n    inputs: [\n        'coneInnerAngle',\n        'coneOuterAngle',\n        'coneOuterGain',\n        'distanceModel',\n        'maxDistance',\n        'panningModel',\n        'refDistance',\n        'rolloffFactor',\n        'channelCount',\n        'channelCountMode',\n        'channelInterpretation',\n    ],\n    providers: [\n        {\n            provide: AUDIO_NODE,\n            useExisting: forwardRef(() => WebAudioPanner),\n        },\n    ],\n})\nexport class WebAudioPanner extends PannerNode implements OnDestroy, OnChanges {\n    @Input()\n    @audioParam('orientationX')\n    orientationXParam?: AudioParamInput;\n\n    @Input()\n    @audioParam('orientationY')\n    orientationYParam?: AudioParamInput;\n\n    @Input()\n    @audioParam('orientationZ')\n    orientationZParam?: AudioParamInput;\n\n    @Input()\n    @audioParam('positionX')\n    positionXParam?: AudioParamInput;\n\n    @Input()\n    @audioParam('positionY')\n    positionYParam?: AudioParamInput;\n\n    @Input()\n    @audioParam('positionZ')\n    positionZParam?: AudioParamInput;\n\n    constructor(\n        @Inject(AUDIO_CONTEXT) context: BaseAudioContext,\n        @SkipSelf() @Inject(AUDIO_NODE) node: AudioNode | null,\n        @Inject(CONSTRUCTOR_SUPPORT) modern: boolean,\n    ) {\n        if (modern) {\n            super(context);\n            connect(\n                node,\n                this,\n            );\n        } else {\n            const result = context.createPanner() as WebAudioPanner;\n\n            Object.setPrototypeOf(result, WebAudioPanner.prototype);\n            connect(\n                node,\n                result,\n            );\n\n            return result;\n        }\n    }\n\n    ngOnChanges() {\n        if (this.positionX instanceof AudioParam) {\n            return;\n        }\n\n        // Fallback for older browsers\n        this.setOrientation(\n            fallbackAudioParam(this.orientationXParam),\n            fallbackAudioParam(this.orientationYParam),\n            fallbackAudioParam(this.orientationZParam),\n        );\n        this.setPosition(\n            fallbackAudioParam(this.positionXParam),\n            fallbackAudioParam(this.positionYParam),\n            fallbackAudioParam(this.positionZParam),\n        );\n    }\n\n    ngOnDestroy() {\n        this.disconnect();\n    }\n}\n","import {\n    Attribute,\n    Directive,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    OnDestroy,\n    Output,\n    SkipSelf,\n} from '@angular/core';\nimport {AUDIO_CONTEXT} from '../tokens/audio-context';\nimport {AUDIO_NODE} from '../tokens/audio-node';\nimport {connect} from '../utils/connect';\n\n// @dynamic\n@Directive({\n    selector: '[waScriptProcessorNode]',\n    exportAs: 'AudioNode',\n    inputs: ['channelCount', 'channelCountMode', 'channelInterpretation'],\n    providers: [\n        {\n            provide: AUDIO_NODE,\n            useExisting: forwardRef(() => WebAudioScriptProcessor),\n        },\n    ],\n})\nexport class WebAudioScriptProcessor extends ScriptProcessorNode implements OnDestroy {\n    @Output()\n    audioprocess?: EventEmitter<AudioProcessingEvent>;\n\n    constructor(\n        @Attribute('bufferSize') bufferSize: string | null,\n        @Attribute('numberOfInputChannels') numberOfInputChannels: string | null,\n        @Attribute('numberOfOutputChannels') numberOfOutputChannels: string | null,\n        @Inject(AUDIO_CONTEXT) context: BaseAudioContext,\n        @SkipSelf() @Inject(AUDIO_NODE) node: AudioNode | null,\n    ) {\n        try {\n            const result = context.createScriptProcessor(\n                parseInt(bufferSize || '', 10) || 0,\n                parseInt(numberOfInputChannels || '', 10) || 2,\n                parseInt(numberOfOutputChannels || '', 10) || 2,\n            ) as WebAudioScriptProcessor;\n\n            Object.setPrototypeOf(result, WebAudioScriptProcessor.prototype);\n            connect(\n                node,\n                result,\n            );\n\n            const audioprocess = new EventEmitter<AudioProcessingEvent>();\n\n            result.audioprocess = audioprocess;\n            result.onaudioprocess = e => audioprocess.emit(e);\n\n            return result;\n        } catch (_) {}\n        super();\n    }\n\n    ngOnDestroy() {\n        this.disconnect();\n    }\n}\n","import {\n    Attribute,\n    Directive,\n    forwardRef,\n    Inject,\n    Input,\n    OnDestroy,\n    SkipSelf,\n} from '@angular/core';\nimport {AUDIO_CONTEXT} from '../tokens/audio-context';\nimport {AUDIO_NODE} from '../tokens/audio-node';\nimport {AudioParamInput} from '../types/audio-param-input';\nimport {connect} from '../utils/connect';\nimport {fallbackAudioParam} from '../utils/fallback-audio-param';\nimport {parse} from '../utils/parse';\nimport {processAudioParam} from '../utils/process-audio-param';\n\n// @dynamic\n@Directive({\n    selector: '[waStereoPannerNode]',\n    exportAs: 'AudioNode',\n    inputs: ['channelCount', 'channelCountMode', 'channelInterpretation'],\n    providers: [\n        {\n            provide: AUDIO_NODE,\n            useExisting: forwardRef(() => WebAudioStereoPanner),\n        },\n    ],\n})\nexport class WebAudioStereoPanner extends StereoPannerNode implements OnDestroy {\n    @Input('pan')\n    set panParam(pan: AudioParamInput) {\n        if ('setPosition' in this) {\n            /** fallback for browsers not supporting {@link StereoPannerNode} */\n            // @ts-ignore\n            this.fallbackToPannerNode(fallbackAudioParam(pan));\n        } else {\n            processAudioParam(this.pan, pan, this.context.currentTime);\n        }\n    }\n\n    constructor(\n        @Inject(AUDIO_CONTEXT) context: BaseAudioContext,\n        @SkipSelf() @Inject(AUDIO_NODE) node: AudioNode | null,\n        @Attribute('pan') panArg: string | null,\n    ) {\n        const pan = parse(panArg, 0);\n\n        try {\n            // @ts-ignore\n            const _test = new StereoPannerNode(context);\n        } catch (_) {\n            const result = (context.createPanner() as unknown) as WebAudioStereoPanner;\n\n            Object.setPrototypeOf(result, WebAudioStereoPanner.prototype);\n            result.fallbackToPannerNode(fallbackAudioParam(pan));\n            connect(\n                node,\n                result,\n            );\n\n            return result;\n        }\n\n        super(context, {pan});\n        connect(\n            node,\n            this,\n        );\n    }\n\n    ngOnDestroy() {\n        this.disconnect();\n    }\n\n    // @ts-ignore\n    private fallbackToPannerNode(pan: number) {\n        const xDeg = pan * 100;\n        const zDeg = xDeg > 0 ? 270 - xDeg : xDeg + 90;\n        const x = Math.sin(xDeg * (Math.PI / 180));\n        const z = Math.sin(zDeg * (Math.PI / 180));\n\n        // @ts-ignore\n        this.setPosition(x, 0, z);\n    }\n}\n","import {Directive, forwardRef, Inject, OnDestroy, SkipSelf} from '@angular/core';\nimport {AUDIO_CONTEXT} from '../tokens/audio-context';\nimport {AUDIO_NODE} from '../tokens/audio-node';\nimport {CONSTRUCTOR_SUPPORT} from '../tokens/constructor-support';\nimport {connect} from '../utils/connect';\n\n// @dynamic\n@Directive({\n    selector: '[waWaveShaperNode]',\n    exportAs: 'AudioNode',\n    inputs: [\n        'oversample',\n        'curve',\n        'channelCount',\n        'channelCountMode',\n        'channelInterpretation',\n    ],\n    providers: [\n        {\n            provide: AUDIO_NODE,\n            useExisting: forwardRef(() => WebAudioWaveShaper),\n        },\n    ],\n})\nexport class WebAudioWaveShaper extends WaveShaperNode implements OnDestroy {\n    constructor(\n        @Inject(AUDIO_CONTEXT) context: BaseAudioContext,\n        @SkipSelf() @Inject(AUDIO_NODE) node: AudioNode | null,\n        @Inject(CONSTRUCTOR_SUPPORT) modern: boolean,\n    ) {\n        if (modern) {\n            super(context);\n            connect(\n                node,\n                this,\n            );\n        } else {\n            const result = context.createWaveShaper() as WebAudioWaveShaper;\n\n            Object.setPrototypeOf(result, WebAudioWaveShaper.prototype);\n            connect(\n                node,\n                result,\n            );\n\n            return result;\n        }\n    }\n\n    ngOnDestroy() {\n        this.disconnect();\n    }\n}\n","import {\n    Attribute,\n    Directive,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    OnDestroy,\n    Output,\n    SkipSelf,\n} from '@angular/core';\nimport {AUDIO_CONTEXT} from '../tokens/audio-context';\nimport {AUDIO_NODE} from '../tokens/audio-node';\nimport {connect} from '../utils/connect';\n\n// @dynamic\n@Directive({\n    selector: '[waAudioWorkletNode][name]',\n    exportAs: 'AudioNode',\n    inputs: ['channelCount', 'channelCountMode', 'channelInterpretation'],\n    providers: [\n        {\n            provide: AUDIO_NODE,\n            useExisting: forwardRef(() => WebAudioWorklet),\n        },\n    ],\n})\nexport class WebAudioWorklet extends AudioWorkletNode implements OnDestroy {\n    @Output()\n    processorerror = new EventEmitter<void>();\n\n    readonly onprocessorerror = () => this.processorerror.emit();\n\n    constructor(\n        @Inject(AUDIO_CONTEXT) context: BaseAudioContext,\n        @SkipSelf() @Inject(AUDIO_NODE) node: AudioNode | null,\n        @Attribute('name') name: string,\n    ) {\n        super(context, name);\n\n        connect(\n            node,\n            this,\n        );\n    }\n\n    ngOnDestroy() {\n        this.disconnect();\n    }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\nimport {AudioParamAutomation} from '../types/audio-param-automation';\nimport {AudioParamAutomationMode} from '../types/audio-param-automation-mode';\nimport {AudioParamCurve} from '../types/audio-param-curve';\n\n@Pipe({\n    name: 'waAudioParam',\n})\nexport class WebAudioParamPipe implements PipeTransform {\n    /**\n     * Creates {@link AudioParamAutomation} to use with {@link AudioParam} inputs\n     *\n     * @param value target value\n     * @param duration duration of the automation\n     * @param mode either instant for given duration or linear/exponential ramp\n     */\n    transform(\n        value: number | number[],\n        duration: number,\n        mode: AudioParamAutomationMode = 'exponential',\n    ): AudioParamAutomation | AudioParamCurve {\n        return value instanceof Array\n            ? {\n                  value,\n                  duration,\n              }\n            : {\n                  value,\n                  duration,\n                  mode,\n              };\n    }\n}\n","import {Inject, Pipe, PipeTransform} from '@angular/core';\nimport {AUDIO_CONTEXT} from '../tokens/audio-context';\n\n// @dynamic\n@Pipe({\n    name: 'waPeriodicWave',\n})\nexport class WebAudioPeriodicWavePipe implements PipeTransform {\n    constructor(@Inject(AUDIO_CONTEXT) private readonly context: BaseAudioContext) {}\n\n    /**\n     * Creates {@link PeriodicWave} to use with {@link OscillatorNode}\n     *\n     * @param real cosine terms (traditionally the A terms)\n     * @param imag sine terms (traditionally the B terms)\n     * @param disableNormalization see {@lin PeriodicWaveConstraints}\n     */\n    transform(\n        real: number[],\n        imag?: number[],\n        disableNormalization?: boolean,\n    ): PeriodicWave {\n        return this.context.createPeriodicWave(\n            new Float32Array(real),\n            imag ? new Float32Array(imag) : new Float32Array(real.length),\n            {\n                disableNormalization: !!disableNormalization,\n            },\n        );\n    }\n}\n","import {Inject, Injectable} from '@angular/core';\nimport {AUDIO_CONTEXT} from '../tokens/audio-context';\n\n// @dynamic\n@Injectable({\n    providedIn: 'root',\n})\nexport class AudioBufferService {\n    private readonly cache = new Map<string, AudioBuffer>();\n\n    constructor(@Inject(AUDIO_CONTEXT) private readonly context: BaseAudioContext) {}\n\n    fetch(url: string): Promise<AudioBuffer> {\n        return new Promise<AudioBuffer>((resolve, reject) => {\n            if (this.cache.has(url)) {\n                resolve(this.cache.get(url));\n\n                return;\n            }\n\n            const request = new XMLHttpRequest();\n\n            request.open('GET', url, true);\n            request.responseType = 'arraybuffer';\n            request.onerror = reject;\n            request.onabort = reject;\n            request.onload = () => {\n                this.context.decodeAudioData(\n                    request.response,\n                    buffer => {\n                        this.cache.set(url, buffer);\n                        resolve(buffer);\n                    },\n                    reject,\n                );\n            };\n            request.send();\n        });\n    }\n}\n","import {\n    Attribute,\n    Directive,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnDestroy,\n    Output,\n} from '@angular/core';\nimport {of, Subject} from 'rxjs';\nimport {switchMap} from 'rxjs/operators';\nimport {audioParam} from '../decorators/audio-param';\nimport {AudioBufferService} from '../services/audio-buffer.service';\nimport {AUDIO_CONTEXT} from '../tokens/audio-context';\nimport {AUDIO_NODE} from '../tokens/audio-node';\nimport {CONSTRUCTOR_SUPPORT} from '../tokens/constructor-support';\nimport {AudioParamInput} from '../types/audio-param-input';\nimport {parse} from '../utils/parse';\n\n// @dynamic\n@Directive({\n    selector: '[waAudioBufferSourceNode]',\n    exportAs: 'AudioNode',\n    inputs: [\n        'loop',\n        'loopStart',\n        'loopEnd',\n        'channelCount',\n        'channelCountMode',\n        'channelInterpretation',\n    ],\n    providers: [\n        {\n            provide: AUDIO_NODE,\n            useExisting: forwardRef(() => WebAudioBufferSource),\n        },\n    ],\n})\nexport class WebAudioBufferSource extends AudioBufferSourceNode implements OnDestroy {\n    @Input('buffer')\n    set bufferSetter(source: AudioBuffer | null | string) {\n        this.buffer$.next(source);\n    }\n\n    @Input('detune')\n    @audioParam('detune')\n    detuneParam?: AudioParamInput;\n\n    @Input('playbackRate')\n    @audioParam('playbackRate')\n    playbackRateParam?: AudioParamInput;\n\n    @Output()\n    ended?: EventEmitter<void>;\n\n    buffer$!: Subject<AudioBuffer | null | string>;\n\n    constructor(\n        @Inject(AudioBufferService) audioBufferService: AudioBufferService,\n        @Inject(AUDIO_CONTEXT) context: BaseAudioContext,\n        @Inject(CONSTRUCTOR_SUPPORT) modern: boolean,\n        @Attribute('autoplay') autoplay: string | null,\n        @Attribute('detune') detuneArg: string | null,\n        @Attribute('playbackRate') playbackRateArg: string | null,\n    ) {\n        const detune = parse(detuneArg, 0);\n        const playbackRate = parse(playbackRateArg, 1);\n\n        if (modern) {\n            super(context, {detune, playbackRate});\n            WebAudioBufferSource.init(this, null, autoplay, audioBufferService);\n        } else {\n            const result = context.createBufferSource() as WebAudioBufferSource;\n\n            Object.setPrototypeOf(result, WebAudioBufferSource.prototype);\n            if(detune)\n                result.detune.value = detune;\n            result.playbackRate.value = playbackRate;\n            WebAudioBufferSource.init(result, null, autoplay, audioBufferService);\n\n            return result;\n        }\n    }\n\n    ngOnDestroy() {\n        this.buffer$.complete();\n\n        try {\n            this.stop();\n        } catch (_) {}\n\n        this.disconnect();\n    }\n\n    static init(\n        that: WebAudioBufferSource,\n        _node: AudioNode | null,\n        autoplay: string | null,\n        audioBufferService: AudioBufferService,\n    ) {\n        if (autoplay !== null) {\n            that.start();\n        }\n\n        const ended = new EventEmitter<void>();\n\n        that.ended = ended;\n        that.onended = () => ended.emit();\n        that.buffer$ = new Subject<AudioBuffer | null | string>();\n        that.buffer$\n            .pipe(\n                switchMap(source =>\n                    typeof source === 'string'\n                        ? audioBufferService.fetch(source)\n                        : of(source),\n                ),\n            )\n            .subscribe(buffer => {\n                that.buffer = buffer;\n            });\n    }\n}\n","import {\n    Attribute,\n    Directive,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnDestroy,\n    Output,\n} from '@angular/core';\nimport {audioParam} from '../decorators/audio-param';\nimport {AUDIO_CONTEXT} from '../tokens/audio-context';\nimport {AUDIO_NODE} from '../tokens/audio-node';\nimport {AudioParamInput} from '../types/audio-param-input';\nimport {parse} from '../utils/parse';\n\n// @dynamic\n@Directive({\n    selector: '[waConstantSourceNode]',\n    exportAs: 'AudioNode',\n    inputs: ['channelCount', 'channelCountMode', 'channelInterpretation'],\n    providers: [\n        {\n            provide: AUDIO_NODE,\n            useExisting: forwardRef(() => WebAudioConstantSource),\n        },\n    ],\n})\nexport class WebAudioConstantSource extends ConstantSourceNode implements OnDestroy {\n    @Input('offset')\n    @audioParam('offset')\n    offsetParam?: AudioParamInput;\n\n    @Output()\n    ended = new EventEmitter<void>();\n\n    readonly onended = () => this.ended.emit();\n\n    constructor(\n        @Inject(AUDIO_CONTEXT) context: BaseAudioContext,\n        @Attribute('autoplay') autoplay: string | null,\n        @Attribute('offset') offset: string | null,\n    ) {\n        super(context, {\n            offset: parse(offset, 0),\n        });\n\n        if (autoplay !== null) {\n            this.start();\n        }\n    }\n\n    ngOnDestroy() {\n        try {\n            this.stop();\n        } catch (_) {}\n\n        this.disconnect();\n    }\n}\n","import {Directive, ElementRef, forwardRef, Inject, OnDestroy} from '@angular/core';\nimport {AUDIO_CONTEXT} from '../tokens/audio-context';\nimport {AUDIO_NODE} from '../tokens/audio-node';\nimport {CONSTRUCTOR_SUPPORT} from '../tokens/constructor-support';\n\n// @dynamic\n@Directive({\n    selector:\n        'audio[waMediaElementAudioSourceNode], video[waMediaElementAudioSourceNode]',\n    exportAs: 'AudioNode',\n    providers: [\n        {\n            provide: AUDIO_NODE,\n            useExisting: forwardRef(() => WebAudioMediaSource),\n        },\n    ],\n})\nexport class WebAudioMediaSource extends MediaElementAudioSourceNode\n    implements OnDestroy {\n    constructor(\n        @Inject(AUDIO_CONTEXT) context: AudioContext,\n        @Inject(CONSTRUCTOR_SUPPORT) modern: boolean,\n        @Inject(ElementRef) {nativeElement}: ElementRef<HTMLMediaElement>,\n    ) {\n        if (modern) {\n            super(context, {mediaElement: nativeElement});\n        } else {\n            const result = context.createMediaElementSource(nativeElement);\n\n            Object.setPrototypeOf(result, WebAudioMediaSource.prototype);\n\n            return result as WebAudioMediaSource;\n        }\n    }\n\n    ngOnDestroy() {\n        this.disconnect();\n    }\n}\n","import {Directive, forwardRef, Inject, OnDestroy} from '@angular/core';\nimport {AUDIO_CONTEXT} from '../tokens/audio-context';\nimport {AUDIO_NODE} from '../tokens/audio-node';\nimport {CONSTRUCTOR_SUPPORT} from '../tokens/constructor-support';\nimport {MEDIA_STREAM} from '../tokens/media-stream';\n\n// @dynamic\n@Directive({\n    selector: '[waMediaStreamAudioSourceNode]',\n    exportAs: 'AudioNode',\n    providers: [\n        {\n            provide: AUDIO_NODE,\n            useExisting: forwardRef(() => WebAudioMediaStreamSource),\n        },\n    ],\n})\nexport class WebAudioMediaStreamSource extends MediaStreamAudioSourceNode\n    implements OnDestroy {\n    constructor(\n        @Inject(MEDIA_STREAM) mediaStream: MediaStream,\n        @Inject(AUDIO_CONTEXT) context: AudioContext,\n        @Inject(CONSTRUCTOR_SUPPORT) modern: boolean,\n    ) {\n        if (modern) {\n            super(context, {mediaStream});\n        } else {\n            const result = context.createMediaStreamSource(mediaStream);\n\n            Object.setPrototypeOf(result, WebAudioMediaStreamSource.prototype);\n\n            return result as WebAudioMediaStreamSource;\n        }\n    }\n\n    ngOnDestroy() {\n        this.disconnect();\n    }\n}\n","import {Directive, forwardRef, Inject, OnDestroy} from '@angular/core';\nimport {AUDIO_CONTEXT} from '../tokens/audio-context';\nimport {AUDIO_NODE} from '../tokens/audio-node';\nimport {MEDIA_STREAM_TRACK} from '../tokens/media-stream-track';\n\n// @dynamic\n@Directive({\n    selector: '[waMediaStreamTrackAudioSourceNode]',\n    exportAs: 'AudioNode',\n    providers: [\n        {\n            provide: AUDIO_NODE,\n            useExisting: forwardRef(() => WebAudioMediaStreamTrackSource),\n        },\n    ],\n})\nexport class WebAudioMediaStreamTrackSource extends MediaStreamTrackAudioSourceNode\n    implements OnDestroy {\n    constructor(\n        @Inject(MEDIA_STREAM_TRACK) mediaStreamTrack: MediaStreamTrack,\n        @Inject(AUDIO_CONTEXT) context: AudioContext,\n    ) {\n        super(context, {mediaStreamTrack});\n    }\n\n    ngOnDestroy() {\n        this.disconnect();\n    }\n}\n","import {InjectionToken} from '@angular/core';\n\nexport const AUDIO_CONTEXT = new InjectionToken<BaseAudioContext>(\n    'Web Audio API context',\n    {\n        providedIn: 'root',\n        factory: () => new AudioContext(),\n    },\n);\n","import {InjectionToken} from '@angular/core';\n\nexport const AUDIO_NODE = new InjectionToken<AudioNode | null>(\n    'Web Audio API audio node',\n    {\n        factory: () => null,\n    },\n);\n","import {inject, InjectionToken} from '@angular/core';\nimport {AUDIO_CONTEXT} from './audio-context';\n\n/**\n * This is mostly for internal use only\n */\nexport const CONSTRUCTOR_SUPPORT = new InjectionToken<boolean>(\n    'Tests if constructor mode of node creation is supported or a fallback to factory method is needed',\n    {\n        providedIn: 'root',\n        factory: () => {\n            try {\n                return !!new GainNode(inject(AUDIO_CONTEXT));\n            } catch (_) {\n                return false;\n            }\n        },\n    },\n);\n","import {InjectionToken} from '@angular/core';\n\nexport const FEEDBACK_COEFFICIENTS = new InjectionToken<number[]>(\n    'A sequence of feedback coefficients for IIRFilterNode',\n);\n","import {InjectionToken} from '@angular/core';\n\nexport const FEEDFORWARD_COEFFICIENTS = new InjectionToken<number[]>(\n    'A sequence of feedforward coefficients for IIRFilterNode',\n);\n","import {InjectionToken} from '@angular/core';\n\nexport const MEDIA_STREAM_TRACK = new InjectionToken<MediaStreamTrack>(\n    'MediaStreamTrack for MediaStreamTrackAudioSourceNode',\n);\n","import {InjectionToken} from '@angular/core';\n\nexport const MEDIA_STREAM = new InjectionToken<MediaStream>(\n    'MediaStream for MediaStreamAudioSourceNode',\n);\n","export function connect(\n    source?: AudioNode | null,\n    destination?: AudioNode | AudioParam | null,\n) {\n    if (source && destination) {\n        // @ts-ignore TS does not have a union override for connect method\n        source.connect(destination);\n    }\n}\n","import {AudioParamInput} from '../types/audio-param-input';\n\nexport function fallbackAudioParam(value?: AudioParamInput): number {\n    if (!value) {\n        return 0;\n    }\n\n    if (typeof value === 'number') {\n        return value;\n    }\n\n    if (value instanceof Array) {\n        const last = value[value.length - 1].value;\n\n        return typeof last === 'number' ? last : last[last.length - 1];\n    }\n\n    if (value.value instanceof Array) {\n        return value.value[value.value.length - 1];\n    }\n\n    return value.value;\n}\n","export function latencyHintFactory(\n    latencyHint: AudioContextLatencyCategory | null,\n): AudioContextLatencyCategory | number | undefined {\n    return latencyHint === null\n        ? undefined\n        : Number.parseFloat(latencyHint) || latencyHint;\n}\n","export function parse(value: string | null, fallback: number): number {\n    const parsed = parseFloat(value || '');\n\n    return isNaN(parsed) ? fallback : parsed;\n}\n","import {AudioParamAutomation} from '../types/audio-param-automation';\nimport {AudioParamCurve} from '../types/audio-param-curve';\nimport {AudioParamInput} from '../types/audio-param-input';\n\nexport function processAudioParam(\n    param: AudioParam,\n    value: AudioParamInput,\n    currentTime: number = 0,\n) {\n    if (param.cancelAndHoldAtTime) {\n        param.cancelAndHoldAtTime(currentTime);\n    } else {\n        param.cancelScheduledValues(currentTime);\n        param.setValueAtTime(guard(param.value), currentTime);\n    }\n\n    if (typeof value === 'number') {\n        param.setValueAtTime(guard(value), currentTime);\n\n        return;\n    }\n\n    if (value instanceof Array) {\n        processSchedule(param, value, currentTime);\n\n        return;\n    }\n\n    if (!('mode' in value)) {\n        param.setValueCurveAtTime(value.value, currentTime, value.duration);\n\n        return;\n    }\n\n    param.setValueAtTime(guard(param.value), currentTime);\n    processAutomation(param, value, currentTime);\n}\n\nfunction processSchedule(\n    param: AudioParam,\n    value: Array<AudioParamAutomation | AudioParamCurve>,\n    currentTime: number,\n) {\n    value.forEach(automation => {\n        if ('mode' in automation) {\n            processAutomation(param, automation, currentTime);\n        } else {\n            param.setValueCurveAtTime(automation.value, currentTime, automation.duration);\n        }\n\n        currentTime += automation.duration;\n    });\n}\n\nfunction processAutomation(\n    param: AudioParam,\n    {value, mode = 'instant', duration}: AudioParamAutomation,\n    currentTime: number,\n) {\n    switch (mode) {\n        case 'instant':\n            param.setValueAtTime(guard(value), currentTime);\n            param.setValueAtTime(guard(value), currentTime + duration);\n            break;\n        case 'exponential':\n            if (value < 0 || value * param.value < 0) {\n                param.linearRampToValueAtTime(guard(value), currentTime + duration);\n            } else {\n                param.exponentialRampToValueAtTime(guard(value), currentTime + duration);\n            }\n\n            param.setValueAtTime(guard(value), currentTime + duration);\n            break;\n        case 'linear':\n            param.linearRampToValueAtTime(guard(value), currentTime + duration);\n            break;\n    }\n}\n\nfunction guard(v: number): number {\n    return v || 0.00000001;\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-hear',\n  templateUrl: './hear.component.html',\n  styleUrls: ['./hear.component.scss']\n})\nexport class HearComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-cards-grid></app-cards-grid>   ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>home works!</p>\n","import { ModuleWithProviders, NgModule} from \"@angular/core\";\nimport { MAT_LABEL_GLOBAL_OPTIONS, MatNativeDateModule, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\n\n@NgModule({\n    imports: [\n        MatAutocompleteModule,\n        MatBadgeModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatStepperModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatExpansionModule,\n        MatFormFieldModule,\n        MatGridListModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatPaginatorModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatRadioModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatSnackBarModule,\n        MatSortModule,\n        MatTableModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatTreeModule,\n        MatNativeDateModule,\n        MatChipsModule\n    ],\n    exports: [\n        DragDropModule,\n        MatAutocompleteModule,\n        MatBadgeModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatStepperModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatExpansionModule,\n        MatFormFieldModule,\n        MatGridListModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatPaginatorModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatRadioModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatSnackBarModule,\n        MatSortModule,\n        MatTableModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatTreeModule,\n        MatNativeDateModule,\n        MatChipsModule\n    ],\n    providers: [     \n    ]\n})\nexport class MaterialModule {\n    constructor(public matIconRegistry: MatIconRegistry) {\n    }\n}\n","export { } // this will make it module\n\ndeclare global { // this is important to access it as global type String\n\n    interface String {\n\n\n        replaceAll(target: string, replace: string, ignore?: boolean): string;\n\n\n    }\n\n}\n\nString.prototype.replaceAll = function (str1: string, str2: string, ignore: boolean = false) {\n    return this.replace(new RegExp(str1.replace(/([\\/\\,\\!\\\\\\^\\$\\{\\}\\[\\]\\(\\)\\.\\*\\+\\?\\|\\<\\>\\-\\&])/g, \"\\\\$&\"), (ignore ? \"gi\" : \"g\")), (typeof (str2) == \"string\") ? str2.replace(/\\$/g, \"$$$$\") : str2);\n}","import { AfterViewChecked, AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { ThemingService } from '../theming.service';\nimport { CommunicationService } from '../shared/communication.service';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NavBarComponent implements OnInit, AfterViewChecked, AfterViewInit {\n\n  constructor(private themingService: ThemingService,private cdRef:ChangeDetectorRef, private communicationService: CommunicationService) { \n  }\n  hearUrl = 'assets/images/hear.svg';\n  hearSelectedUrl = 'assets/images/hear-o.svg';\n  logoUrl = 'assets/images/logo-dark.svg';\n  navLogoUrl = 'assets/images/nav-logo.svg';\n  confessUrl = 'assets/images/confess-icon.svg';\n  confessDarkUrl = 'assets/images/confess-icon-dark.svg';\n  confessSelectedUrl = 'assets/images/confess-o.svg';\n  selection = \"hear\";\n  expandIcon = \"expand_more\"\n  isDarkMode = false;\n  showMenu = false;\n  obscenity = true;\n  userLinks = [\n    {\n      name: \"Change Password\",\n      iconCls: \"fa fa-list-ol\",\n      click: \"changePassword\",\n    },\n    {\n      iconCls: \"fa fa-plus\",\n      name: \"Log Out\",\n      click: \"logout\",\n    },\n  ];\n  ngOnInit(): void {\n    this.updateTheme();\n    this.showMenu = false;\n  }\n\n  hearOnClick(){\n    this.selection = \"hear\"\n  }\n  onClickUserOption(){\n    this.showMenu = !this.showMenu;\n    this.expandIcon = this.showMenu?\"expand_less\":\"expand_more\";\n  }\n  changed($event){\n    this.changeTheme($event);\n    this.showMenu = false;\n    this.expandIcon = this.showMenu?\"expand_less\":\"expand_more\";\n  }\n  changeObscenity($event){\n    this.obscenity = $event.checked;\n    this.communicationService.changeObscenetiy(this.obscenity);\n    this.showMenu = false;\n    this.expandIcon = this.showMenu?\"expand_less\":\"expand_more\";\n  }\n  changeTheme($event){\n    console.log($event)\n    this.isDarkMode = $event.checked;\n    if($event.checked)\n      this.themingService.theme.next(\"dark-theme\");\n    else\n      this.themingService.theme.next(\"light-theme\")\n  }\n  confessOnClick(){\n    this.selection = \"confess\"\n  }\n  ngAfterViewInit() {\n    this.cdRef.detectChanges();\n    }\n  ngAfterViewChecked(): void{\n    this.updateTheme();\n    this.cdRef.detectChanges();\n  }\n  updateTheme(){\n    if(this.themingService.theme.value === 'light-theme'){\n      this.isDarkMode = false;\n      this.confessUrl = \"assets/images/confess-icon.svg\";\n      this.hearUrl = \"assets/images/hear.svg\";\n      this.logoUrl = \"assets/images/logo-dark.svg\";\n     }else{\n      this.isDarkMode = true;\n      this.confessUrl = \"assets/images/confess-icon-dark.svg\";\n      this.hearUrl = \"assets/images/hear-dark.svg\";\n      this.logoUrl = \"assets/images/logo-light.svg\";\n     }\n  }\n}\n","<nav class=\"nav-content\">\n    <div class=\"d-flex justify-content-between mt2 mb1\" style=\"z-index: 1001;\">\n        <!-- <img [src]=\"navLogoUrl\" class=\"pointer height ml2 vis\" /> -->\n        <a routerLink=\"/hear\" routerLinkActive=\"active\" class=\"pointer\">\n            <img [src]=\"logoUrl\" class=\"pointer height-logo ml2\" />\n        </a>\n        <div class=\"d-flex\" style=\"margin-right:2%\">\n            <a routerLink=\"/hear\" routerLinkActive=\"active\" class=\"pointer listen mr-25 mb-0\"\n                [ngClass]=\"{selected: selection === 'hear'}\" (click)=\"hearOnClick()\">\n                <span class=\"fw-600\">Listen</span>\n                <img *ngIf=\"selection !== 'hear'\" class=\"hear-image\" [src]=\"hearUrl\" />\n                <img *ngIf=\"selection === 'hear'\" class=\"hear-image\" [src]=\"hearSelectedUrl\" />\n            </a>\n            <a routerLink=\"/confess\" routerLinkActive=\"active\" class=\"pointer confess mr-25 mb-0\"\n                [ngClass]=\"{selected: selection === 'confess'}\" (click)=\"confessOnClick()\">\n                <span class=\"fw-600\">Confess</span>\n                <img *ngIf=\"selection !== 'confess'\" class=\"confess-image\" [src]=\"confessUrl\" />\n                <img *ngIf=\"selection === 'confess'\" class=\"confess-image\" [src]=\"confessSelectedUrl\" />\n            </a>\n            <!-- <div class=\"listen pointer height mr2\"></div>\n            <div class=\"confess pointer height mr2\"></div> -->\n            <div class=\"pointer user-op\" (click)=\"onClickUserOption()\">\n                <mat-icon [ngClass]=\"{'mat-cust-dark-color':isDarkMode, 'mat-cust-light-color': !isDarkMode}\"\n                    class=\"pointer\"> account_circle</mat-icon>\n                <mat-icon [ngClass]=\"{'mat-cust-dark-color':isDarkMode, 'mat-cust-light-color': !isDarkMode}\"\n                    class=\"pointer mr1\"> {{expandIcon}}</mat-icon>\n\n            </div>\n        </div>\n    </div>\n    <div class=\"dropdown right mr2\" *ngIf=\"showMenu\">\n        <mat-slide-toggle class=\"dark-text\" [(ngModel)]=\"isDarkMode\" (change)=\"changed($event)\">Dark Mode\n        </mat-slide-toggle>\n    </div>\n    <div class=\"dropdown right mr2\" *ngIf=\"showMenu\">\n        <mat-slide-toggle class=\"dark-text\" [(ngModel)]=\"obscenity\" (change)=\"changeObscenity($event)\">Obscenity\n        </mat-slide-toggle>\n    </div>\n    <div class=\"bg-grad\" style=\"z-index: -1;\"\n        [ngClass]=\"{'nav-back-dark-grad':isDarkMode, 'nav-back-light-grad': !isDarkMode}\"></div>\n\n</nav>","declare var require: any;\nimport '../nativeJS/string-methods';\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'obscenity'\n})\nexport class ObscenityPipe implements PipeTransform {\n  public readonly obscenities = require('badwords-list');\n\n  transform(value: any, ...args: any[]): any {\n    var newVal: string = value;\n    var grawlix: string = '@#$%&!';\n\n    this.obscenities.array.forEach(curse => {\n      newVal = newVal.replaceAll(curse, grawlix);\n    });\n\n    return newVal;\n  }\n\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ObscenityPipe } from './obscenity.pipe';\n\n@NgModule({\n  declarations: [ObscenityPipe],\n  imports: [\n    CommonModule,\n\n  ],\n  exports: [\n    ObscenityPipe\n  ]\n})\nexport class PipesModule { }","\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class CommunicationService {\n    private subject = new Subject<any>();\n    private obscene = new Subject<any>();\n    sendMessage(message: any) {\n        this.subject.next(message);\n    }\n    clearMessages() {\n        this.subject.next();\n    }\n\n    getMessage(): Observable<any> {\n        return this.subject.asObservable();\n    }\n    obscenetiy():Observable<any>{\n        return this.obscene.asObservable();\n    }\n    changeObscenetiy(message: boolean){\n        this.obscene.next(message);\n    }\n}","import { ApplicationRef, Injectable } from \"@angular/core\";\nimport { BehaviorSubject } from \"rxjs\";\n\n@Injectable()\nexport class ThemingService {\n  themes = [\"dark-theme\", \"light-theme\"];\n  theme = new BehaviorSubject(\"light-theme\");\n\n  constructor(private ref: ApplicationRef) {\n    // initially trigger dark mode if preference is set to dark mode on system\n    const darkModeOn =\n      window.matchMedia &&\n      window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n\n    if(darkModeOn){\n      this.theme.next(\"dark-theme\");\n    }\n\n    // watch for changes of the preference\n    window.matchMedia(\"(prefers-color-scheme: dark)\").addListener(e => {\n      const turnOn = e.matches;\n      this.theme.next(turnOn ? \"dark-theme\" : \"light-theme\");\n\n      // trigger refresh of UI\n      this.ref.tick();\n    });\n  }\n  public applyThemeOnOverlays(overlayContainer,themingService,cssClass) {\n    const overlayContainerClasses = overlayContainer.getContainerElement().classList;\n    const themeClassesToRemove = Array.from(themingService.themes);\n    if (themeClassesToRemove.length) {\n      overlayContainerClasses.remove(...themeClassesToRemove);\n    }\n    overlayContainerClasses.add(cssClass);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}